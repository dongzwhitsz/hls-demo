// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> top::ap_ST_fsm_state1 = "1";
const sc_lv<23> top::ap_ST_fsm_state2 = "10";
const sc_lv<23> top::ap_ST_fsm_state3 = "100";
const sc_lv<23> top::ap_ST_fsm_state4 = "1000";
const sc_lv<23> top::ap_ST_fsm_state5 = "10000";
const sc_lv<23> top::ap_ST_fsm_state6 = "100000";
const sc_lv<23> top::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> top::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> top::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> top::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> top::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> top::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> top::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> top::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> top::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> top::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> top::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> top::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> top::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> top::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> top::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<32> top::ap_const_lv32_8 = "1000";
const sc_lv<32> top::ap_const_lv32_D = "1101";
const sc_lv<32> top::ap_const_lv32_F = "1111";
const sc_lv<32> top::ap_const_lv32_10 = "10000";
const sc_lv<32> top::ap_const_lv32_15 = "10101";
const sc_lv<5> top::ap_const_lv5_0 = "00000";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<32> top::ap_const_lv32_E = "1110";
const sc_lv<8> top::ap_const_lv8_0 = "00000000";
const sc_lv<32> top::ap_const_lv32_11 = "10001";
const sc_lv<4> top::ap_const_lv4_0 = "0000";
const sc_lv<32> top::ap_const_lv32_14 = "10100";
const sc_lv<32> top::ap_const_lv32_16 = "10110";
const sc_lv<32> top::ap_const_lv32_12 = "10010";
const sc_lv<32> top::ap_const_lv32_13 = "10011";
const sc_lv<64> top::ap_const_lv64_BFF0000000000000 = "1011111111110000000000000000000000000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_9 = "1001";
const sc_lv<64> top::ap_const_lv64_3F80000000000000 = "11111110000000000000000000000000000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_4 = "100";
const sc_lv<5> top::ap_const_lv5_1C = "11100";
const sc_lv<5> top::ap_const_lv5_1 = "1";
const sc_lv<2> top::ap_const_lv2_0 = "00";
const sc_lv<8> top::ap_const_lv8_80 = "10000000";
const sc_lv<8> top::ap_const_lv8_1 = "1";
const sc_lv<4> top::ap_const_lv4_A = "1010";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_U = new top_c("c_U");
    c_U->clk(ap_clk);
    c_U->reset(ap_rst);
    c_U->address0(c_address0);
    c_U->ce0(c_ce0);
    c_U->we0(c_we0);
    c_U->d0(c_d0);
    c_U->q0(c_q0);
    h_U = new top_c("h_U");
    h_U->clk(ap_clk);
    h_U->reset(ap_rst);
    h_U->address0(h_address0);
    h_U->ce0(h_ce0);
    h_U->we0(h_we0);
    h_U->d0(h_d0);
    h_U->q0(h_q0);
    dense_output_U = new top_c("dense_output_U");
    dense_output_U->clk(ap_clk);
    dense_output_U->reset(ap_rst);
    dense_output_U->address0(dense_output_address0);
    dense_output_U->ce0(dense_output_ce0);
    dense_output_U->we0(dense_output_we0);
    dense_output_U->d0(grp_dense_forward_fu_256_dense_output_d0);
    dense_output_U->q0(dense_output_q0);
    softmax_output_U = new top_softmax_output("softmax_output_U");
    softmax_output_U->clk(ap_clk);
    softmax_output_U->reset(ap_rst);
    softmax_output_U->address0(softmax_output_address0);
    softmax_output_U->ce0(softmax_output_ce0);
    softmax_output_U->we0(softmax_output_we0);
    softmax_output_U->d0(grp_softmax_forward_fu_268_softmax_output_d0);
    softmax_output_U->q0(softmax_output_q0);
    grp_lstm_forward_once_fu_220 = new lstm_forward_once("grp_lstm_forward_once_fu_220");
    grp_lstm_forward_once_fu_220->ap_clk(ap_clk);
    grp_lstm_forward_once_fu_220->ap_rst(ap_rst);
    grp_lstm_forward_once_fu_220->ap_start(grp_lstm_forward_once_fu_220_ap_start);
    grp_lstm_forward_once_fu_220->ap_done(grp_lstm_forward_once_fu_220_ap_done);
    grp_lstm_forward_once_fu_220->ap_idle(grp_lstm_forward_once_fu_220_ap_idle);
    grp_lstm_forward_once_fu_220->ap_ready(grp_lstm_forward_once_fu_220_ap_ready);
    grp_lstm_forward_once_fu_220->img_line_address0(grp_lstm_forward_once_fu_220_img_line_address0);
    grp_lstm_forward_once_fu_220->img_line_ce0(grp_lstm_forward_once_fu_220_img_line_ce0);
    grp_lstm_forward_once_fu_220->img_line_q0(img_q0);
    grp_lstm_forward_once_fu_220->img_line_offset(i1_i_reg_197);
    grp_lstm_forward_once_fu_220->h_address0(grp_lstm_forward_once_fu_220_h_address0);
    grp_lstm_forward_once_fu_220->h_ce0(grp_lstm_forward_once_fu_220_h_ce0);
    grp_lstm_forward_once_fu_220->h_we0(grp_lstm_forward_once_fu_220_h_we0);
    grp_lstm_forward_once_fu_220->h_d0(grp_lstm_forward_once_fu_220_h_d0);
    grp_lstm_forward_once_fu_220->h_q0(h_q0);
    grp_lstm_forward_once_fu_220->c_address0(grp_lstm_forward_once_fu_220_c_address0);
    grp_lstm_forward_once_fu_220->c_ce0(grp_lstm_forward_once_fu_220_c_ce0);
    grp_lstm_forward_once_fu_220->c_we0(grp_lstm_forward_once_fu_220_c_we0);
    grp_lstm_forward_once_fu_220->c_d0(grp_lstm_forward_once_fu_220_c_d0);
    grp_lstm_forward_once_fu_220->c_q0(c_q0);
    grp_dense_forward_fu_256 = new dense_forward("grp_dense_forward_fu_256");
    grp_dense_forward_fu_256->ap_clk(ap_clk);
    grp_dense_forward_fu_256->ap_rst(ap_rst);
    grp_dense_forward_fu_256->ap_start(grp_dense_forward_fu_256_ap_start);
    grp_dense_forward_fu_256->ap_done(grp_dense_forward_fu_256_ap_done);
    grp_dense_forward_fu_256->ap_idle(grp_dense_forward_fu_256_ap_idle);
    grp_dense_forward_fu_256->ap_ready(grp_dense_forward_fu_256_ap_ready);
    grp_dense_forward_fu_256->h_address0(grp_dense_forward_fu_256_h_address0);
    grp_dense_forward_fu_256->h_ce0(grp_dense_forward_fu_256_h_ce0);
    grp_dense_forward_fu_256->h_q0(h_q0);
    grp_dense_forward_fu_256->dense_output_address0(grp_dense_forward_fu_256_dense_output_address0);
    grp_dense_forward_fu_256->dense_output_ce0(grp_dense_forward_fu_256_dense_output_ce0);
    grp_dense_forward_fu_256->dense_output_we0(grp_dense_forward_fu_256_dense_output_we0);
    grp_dense_forward_fu_256->dense_output_d0(grp_dense_forward_fu_256_dense_output_d0);
    grp_dense_forward_fu_256->dense_output_q0(dense_output_q0);
    grp_softmax_forward_fu_268 = new softmax_forward("grp_softmax_forward_fu_268");
    grp_softmax_forward_fu_268->ap_clk(ap_clk);
    grp_softmax_forward_fu_268->ap_rst(ap_rst);
    grp_softmax_forward_fu_268->ap_start(grp_softmax_forward_fu_268_ap_start);
    grp_softmax_forward_fu_268->ap_done(grp_softmax_forward_fu_268_ap_done);
    grp_softmax_forward_fu_268->ap_idle(grp_softmax_forward_fu_268_ap_idle);
    grp_softmax_forward_fu_268->ap_ready(grp_softmax_forward_fu_268_ap_ready);
    grp_softmax_forward_fu_268->dense_output_address0(grp_softmax_forward_fu_268_dense_output_address0);
    grp_softmax_forward_fu_268->dense_output_ce0(grp_softmax_forward_fu_268_dense_output_ce0);
    grp_softmax_forward_fu_268->dense_output_q0(dense_output_q0);
    grp_softmax_forward_fu_268->softmax_output_address0(grp_softmax_forward_fu_268_softmax_output_address0);
    grp_softmax_forward_fu_268->softmax_output_ce0(grp_softmax_forward_fu_268_softmax_output_ce0);
    grp_softmax_forward_fu_268->softmax_output_we0(grp_softmax_forward_fu_268_softmax_output_we0);
    grp_softmax_forward_fu_268->softmax_output_d0(grp_softmax_forward_fu_268_softmax_output_d0);
    grp_softmax_forward_fu_268->softmax_output_q0(softmax_output_q0);
    top_fptrunc_64ns_CeG_U46 = new top_fptrunc_64ns_CeG<1,1,64,32>("top_fptrunc_64ns_CeG_U46");
    top_fptrunc_64ns_CeG_U46->din0(tmp_107_i_reg_449);
    top_fptrunc_64ns_CeG_U46->dout(tmp_108_i_fu_280_p1);
    top_fpext_32ns_64DeQ_U47 = new top_fpext_32ns_64DeQ<1,1,32,64>("top_fpext_32ns_64DeQ_U47");
    top_fpext_32ns_64DeQ_U47->din0(img_q0);
    top_fpext_32ns_64DeQ_U47->dout(tmp_105_i_fu_284_p1);
    top_dadd_64ns_64nFfa_U48 = new top_dadd_64ns_64nFfa<1,5,64,64,64>("top_dadd_64ns_64nFfa_U48");
    top_dadd_64ns_64nFfa_U48->clk(ap_clk);
    top_dadd_64ns_64nFfa_U48->reset(ap_rst);
    top_dadd_64ns_64nFfa_U48->din0(tmp_106_i_reg_444);
    top_dadd_64ns_64nFfa_U48->din1(ap_var_for_const0);
    top_dadd_64ns_64nFfa_U48->ce(ap_var_for_const1);
    top_dadd_64ns_64nFfa_U48->dout(grp_fu_288_p2);
    top_dmul_64ns_64nGfk_U49 = new top_dmul_64ns_64nGfk<1,5,64,64,64>("top_dmul_64ns_64nGfk_U49");
    top_dmul_64ns_64nGfk_U49->clk(ap_clk);
    top_dmul_64ns_64nGfk_U49->reset(ap_rst);
    top_dmul_64ns_64nGfk_U49->din0(tmp_105_i_reg_439);
    top_dmul_64ns_64nGfk_U49->din1(ap_var_for_const2);
    top_dmul_64ns_64nGfk_U49->ce(ap_var_for_const1);
    top_dmul_64ns_64nGfk_U49->dout(grp_fu_293_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_fu_396_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_fu_396_p2 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_c_address0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_i5_fu_378_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_c_ce0 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_c_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_c_d0 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_c_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_c_we0 );
    sensitive << ( exitcond1_i4_fu_366_p2 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dense_output_address0);
    sensitive << ( grp_dense_forward_fu_256_dense_output_address0 );
    sensitive << ( grp_softmax_forward_fu_268_dense_output_address0 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_dense_output_ce0);
    sensitive << ( grp_dense_forward_fu_256_dense_output_ce0 );
    sensitive << ( grp_softmax_forward_fu_268_dense_output_ce0 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_dense_output_we0);
    sensitive << ( grp_dense_forward_fu_256_dense_output_we0 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_exitcond1_i4_fu_366_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i_i3_reg_186 );

    SC_METHOD(thread_exitcond1_i_fu_298_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_164 );

    SC_METHOD(thread_exitcond_fu_396_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( i_reg_209 );

    SC_METHOD(thread_exitcond_i6_fu_384_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( i1_i_reg_197 );

    SC_METHOD(thread_exitcond_i_fu_340_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_i_reg_175 );

    SC_METHOD(thread_grp_dense_forward_fu_256_ap_start);
    sensitive << ( grp_dense_forward_fu_256_ap_start_reg );

    SC_METHOD(thread_grp_lstm_forward_once_fu_220_ap_start);
    sensitive << ( grp_lstm_forward_once_fu_220_ap_start_reg );

    SC_METHOD(thread_grp_softmax_forward_fu_268_ap_start);
    sensitive << ( grp_softmax_forward_fu_268_ap_start_reg );

    SC_METHOD(thread_h_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_h_address0 );
    sensitive << ( grp_dense_forward_fu_256_h_address0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_i5_fu_378_p1 );

    SC_METHOD(thread_h_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_h_ce0 );
    sensitive << ( grp_dense_forward_fu_256_h_ce0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_h_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_h_d0 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_h_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_lstm_forward_once_fu_220_h_we0 );
    sensitive << ( exitcond1_i4_fu_366_p2 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_i_1_fu_402_p2);
    sensitive << ( i_reg_209 );

    SC_METHOD(thread_i_2_fu_372_p2);
    sensitive << ( i_i3_reg_186 );

    SC_METHOD(thread_i_3_fu_304_p2);
    sensitive << ( i_i_reg_164 );

    SC_METHOD(thread_i_4_fu_390_p2);
    sensitive << ( i1_i_reg_197 );

    SC_METHOD(thread_img_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( img_addr_reg_434 );
    sensitive << ( grp_lstm_forward_once_fu_220_img_line_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_4_cast_fu_361_p1 );

    SC_METHOD(thread_img_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_lstm_forward_once_fu_220_img_line_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_img_d0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_108_i_fu_280_p1 );

    SC_METHOD(thread_img_we0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_j_fu_346_p2);
    sensitive << ( j_i_reg_175 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( tmp_reg_478 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( softmax_output_q0 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_p_shl1_cast_fu_330_p1);
    sensitive << ( tmp_2_fu_322_p3 );

    SC_METHOD(thread_p_shl_cast_fu_318_p1);
    sensitive << ( tmp_1_fu_310_p3 );

    SC_METHOD(thread_softmax_output_address0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_fu_408_p1 );
    sensitive << ( grp_softmax_forward_fu_268_softmax_output_address0 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_softmax_output_ce0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_softmax_forward_fu_268_softmax_output_ce0 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_softmax_output_we0);
    sensitive << ( grp_softmax_forward_fu_268_softmax_output_we0 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_tmp_1_fu_310_p3);
    sensitive << ( i_i_reg_164 );

    SC_METHOD(thread_tmp_2_fu_322_p3);
    sensitive << ( i_i_reg_164 );

    SC_METHOD(thread_tmp_3_fu_334_p2);
    sensitive << ( p_shl_cast_fu_318_p1 );
    sensitive << ( p_shl1_cast_fu_330_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_361_p1);
    sensitive << ( tmp_4_fu_356_p2 );

    SC_METHOD(thread_tmp_4_fu_356_p2);
    sensitive << ( tmp_3_reg_421 );
    sensitive << ( tmp_i_cast_fu_352_p1 );

    SC_METHOD(thread_tmp_fu_408_p1);
    sensitive << ( i_reg_209 );

    SC_METHOD(thread_tmp_i5_fu_378_p1);
    sensitive << ( i_i3_reg_186 );

    SC_METHOD(thread_tmp_i_cast_fu_352_p1);
    sensitive << ( j_i_reg_175 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_i_fu_298_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_i_fu_340_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_fu_396_p2 );
    sensitive << ( grp_lstm_forward_once_fu_220_ap_done );
    sensitive << ( grp_dense_forward_fu_256_ap_done );
    sensitive << ( grp_softmax_forward_fu_268_ap_done );
    sensitive << ( exitcond1_i4_fu_366_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond_i6_fu_384_p2 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000001";
    grp_lstm_forward_once_fu_220_ap_start_reg = SC_LOGIC_0;
    grp_dense_forward_fu_256_ap_start_reg = SC_LOGIC_0;
    grp_softmax_forward_fu_268_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_address0, "(port)img_address0");
    sc_trace(mVcdFile, img_ce0, "(port)img_ce0");
    sc_trace(mVcdFile, img_we0, "(port)img_we0");
    sc_trace(mVcdFile, img_d0, "(port)img_d0");
    sc_trace(mVcdFile, img_q0, "(port)img_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, c_address0, "c_address0");
    sc_trace(mVcdFile, c_ce0, "c_ce0");
    sc_trace(mVcdFile, c_we0, "c_we0");
    sc_trace(mVcdFile, c_d0, "c_d0");
    sc_trace(mVcdFile, c_q0, "c_q0");
    sc_trace(mVcdFile, h_address0, "h_address0");
    sc_trace(mVcdFile, h_ce0, "h_ce0");
    sc_trace(mVcdFile, h_we0, "h_we0");
    sc_trace(mVcdFile, h_d0, "h_d0");
    sc_trace(mVcdFile, h_q0, "h_q0");
    sc_trace(mVcdFile, dense_output_address0, "dense_output_address0");
    sc_trace(mVcdFile, dense_output_ce0, "dense_output_ce0");
    sc_trace(mVcdFile, dense_output_we0, "dense_output_we0");
    sc_trace(mVcdFile, dense_output_q0, "dense_output_q0");
    sc_trace(mVcdFile, softmax_output_address0, "softmax_output_address0");
    sc_trace(mVcdFile, softmax_output_ce0, "softmax_output_ce0");
    sc_trace(mVcdFile, softmax_output_we0, "softmax_output_we0");
    sc_trace(mVcdFile, softmax_output_q0, "softmax_output_q0");
    sc_trace(mVcdFile, i_3_fu_304_p2, "i_3_fu_304_p2");
    sc_trace(mVcdFile, i_3_reg_416, "i_3_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_3_fu_334_p2, "tmp_3_fu_334_p2");
    sc_trace(mVcdFile, tmp_3_reg_421, "tmp_3_reg_421");
    sc_trace(mVcdFile, exitcond1_i_fu_298_p2, "exitcond1_i_fu_298_p2");
    sc_trace(mVcdFile, j_fu_346_p2, "j_fu_346_p2");
    sc_trace(mVcdFile, j_reg_429, "j_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, img_addr_reg_434, "img_addr_reg_434");
    sc_trace(mVcdFile, exitcond_i_fu_340_p2, "exitcond_i_fu_340_p2");
    sc_trace(mVcdFile, tmp_105_i_fu_284_p1, "tmp_105_i_fu_284_p1");
    sc_trace(mVcdFile, tmp_105_i_reg_439, "tmp_105_i_reg_439");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_293_p2, "grp_fu_293_p2");
    sc_trace(mVcdFile, tmp_106_i_reg_444, "tmp_106_i_reg_444");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_288_p2, "grp_fu_288_p2");
    sc_trace(mVcdFile, tmp_107_i_reg_449, "tmp_107_i_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, i_2_fu_372_p2, "i_2_fu_372_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_4_fu_390_p2, "i_4_fu_390_p2");
    sc_trace(mVcdFile, i_4_reg_465, "i_4_reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_1_fu_402_p2, "i_1_fu_402_p2");
    sc_trace(mVcdFile, i_1_reg_473, "i_1_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_fu_408_p1, "tmp_fu_408_p1");
    sc_trace(mVcdFile, tmp_reg_478, "tmp_reg_478");
    sc_trace(mVcdFile, exitcond_fu_396_p2, "exitcond_fu_396_p2");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_ap_start, "grp_lstm_forward_once_fu_220_ap_start");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_ap_done, "grp_lstm_forward_once_fu_220_ap_done");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_ap_idle, "grp_lstm_forward_once_fu_220_ap_idle");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_ap_ready, "grp_lstm_forward_once_fu_220_ap_ready");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_img_line_address0, "grp_lstm_forward_once_fu_220_img_line_address0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_img_line_ce0, "grp_lstm_forward_once_fu_220_img_line_ce0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_h_address0, "grp_lstm_forward_once_fu_220_h_address0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_h_ce0, "grp_lstm_forward_once_fu_220_h_ce0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_h_we0, "grp_lstm_forward_once_fu_220_h_we0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_h_d0, "grp_lstm_forward_once_fu_220_h_d0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_c_address0, "grp_lstm_forward_once_fu_220_c_address0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_c_ce0, "grp_lstm_forward_once_fu_220_c_ce0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_c_we0, "grp_lstm_forward_once_fu_220_c_we0");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_c_d0, "grp_lstm_forward_once_fu_220_c_d0");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_ap_start, "grp_dense_forward_fu_256_ap_start");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_ap_done, "grp_dense_forward_fu_256_ap_done");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_ap_idle, "grp_dense_forward_fu_256_ap_idle");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_ap_ready, "grp_dense_forward_fu_256_ap_ready");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_h_address0, "grp_dense_forward_fu_256_h_address0");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_h_ce0, "grp_dense_forward_fu_256_h_ce0");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_dense_output_address0, "grp_dense_forward_fu_256_dense_output_address0");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_dense_output_ce0, "grp_dense_forward_fu_256_dense_output_ce0");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_dense_output_we0, "grp_dense_forward_fu_256_dense_output_we0");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_dense_output_d0, "grp_dense_forward_fu_256_dense_output_d0");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_ap_start, "grp_softmax_forward_fu_268_ap_start");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_ap_done, "grp_softmax_forward_fu_268_ap_done");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_ap_idle, "grp_softmax_forward_fu_268_ap_idle");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_ap_ready, "grp_softmax_forward_fu_268_ap_ready");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_dense_output_address0, "grp_softmax_forward_fu_268_dense_output_address0");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_dense_output_ce0, "grp_softmax_forward_fu_268_dense_output_ce0");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_softmax_output_address0, "grp_softmax_forward_fu_268_softmax_output_address0");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_softmax_output_ce0, "grp_softmax_forward_fu_268_softmax_output_ce0");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_softmax_output_we0, "grp_softmax_forward_fu_268_softmax_output_we0");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_softmax_output_d0, "grp_softmax_forward_fu_268_softmax_output_d0");
    sc_trace(mVcdFile, i_i_reg_164, "i_i_reg_164");
    sc_trace(mVcdFile, j_i_reg_175, "j_i_reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, i_i3_reg_186, "i_i3_reg_186");
    sc_trace(mVcdFile, exitcond1_i4_fu_366_p2, "exitcond1_i4_fu_366_p2");
    sc_trace(mVcdFile, i1_i_reg_197, "i1_i_reg_197");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_reg_209, "i_reg_209");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_lstm_forward_once_fu_220_ap_start_reg, "grp_lstm_forward_once_fu_220_ap_start_reg");
    sc_trace(mVcdFile, exitcond_i6_fu_384_p2, "exitcond_i6_fu_384_p2");
    sc_trace(mVcdFile, grp_dense_forward_fu_256_ap_start_reg, "grp_dense_forward_fu_256_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_softmax_forward_fu_268_ap_start_reg, "grp_softmax_forward_fu_268_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_4_cast_fu_361_p1, "tmp_4_cast_fu_361_p1");
    sc_trace(mVcdFile, tmp_i5_fu_378_p1, "tmp_i5_fu_378_p1");
    sc_trace(mVcdFile, tmp_108_i_fu_280_p1, "tmp_108_i_fu_280_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_1_fu_310_p3, "tmp_1_fu_310_p3");
    sc_trace(mVcdFile, tmp_2_fu_322_p3, "tmp_2_fu_322_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_318_p1, "p_shl_cast_fu_318_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_330_p1, "p_shl1_cast_fu_330_p1");
    sc_trace(mVcdFile, tmp_i_cast_fu_352_p1, "tmp_i_cast_fu_352_p1");
    sc_trace(mVcdFile, tmp_4_fu_356_p2, "tmp_4_fu_356_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete c_U;
    delete h_U;
    delete dense_output_U;
    delete softmax_output_U;
    delete grp_lstm_forward_once_fu_220;
    delete grp_dense_forward_fu_256;
    delete grp_softmax_forward_fu_268;
    delete top_fptrunc_64ns_CeG_U46;
    delete top_fpext_32ns_64DeQ_U47;
    delete top_dadd_64ns_64nFfa_U48;
    delete top_dmul_64ns_64nGfk_U49;
}

void top::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_BFF0000000000000;
}

void top::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_3F80000000000000;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_forward_fu_256_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i6_fu_384_p2.read()))) {
            grp_dense_forward_fu_256_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_forward_fu_256_ap_ready.read())) {
            grp_dense_forward_fu_256_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_lstm_forward_once_fu_220_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_384_p2.read()))) {
            grp_lstm_forward_once_fu_220_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_lstm_forward_once_fu_220_ap_ready.read())) {
            grp_lstm_forward_once_fu_220_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_softmax_forward_fu_268_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            grp_softmax_forward_fu_268_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_softmax_forward_fu_268_ap_ready.read())) {
            grp_softmax_forward_fu_268_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i4_fu_366_p2.read()))) {
        i1_i_reg_197 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(grp_lstm_forward_once_fu_220_ap_done.read(), ap_const_logic_1))) {
        i1_i_reg_197 = i_4_reg_465.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_298_p2.read(), ap_const_lv1_1))) {
        i_i3_reg_186 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i4_fu_366_p2.read()))) {
        i_i3_reg_186 = i_2_fu_372_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_340_p2.read(), ap_const_lv1_1))) {
        i_i_reg_164 = i_3_reg_416.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_i_reg_164 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        i_reg_209 = i_1_reg_473.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(grp_softmax_forward_fu_268_ap_done.read(), ap_const_logic_1))) {
        i_reg_209 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_298_p2.read(), ap_const_lv1_0))) {
        j_i_reg_175 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_i_reg_175 = j_reg_429.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        i_1_reg_473 = i_1_fu_402_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_3_reg_416 = i_3_fu_304_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_4_reg_465 = i_4_fu_390_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_340_p2.read()))) {
        img_addr_reg_434 =  (sc_lv<10>) (tmp_4_cast_fu_361_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_429 = j_fu_346_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_105_i_reg_439 = tmp_105_i_fu_284_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_106_i_reg_444 = grp_fu_293_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_107_i_reg_449 = grp_fu_288_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_298_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_421 = tmp_3_fu_334_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_396_p2.read()))) {
        tmp_reg_478 = tmp_fu_408_p1.read();
    }
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void top::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void top::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void top::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void top::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void top::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void top::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void top::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void top::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void top::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_396_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_396_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_c_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        c_address0 =  (sc_lv<7>) (tmp_i5_fu_378_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        c_address0 = grp_lstm_forward_once_fu_220_c_address0.read();
    } else {
        c_address0 = "XXXXXXX";
    }
}

void top::thread_c_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        c_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        c_ce0 = grp_lstm_forward_once_fu_220_c_ce0.read();
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void top::thread_c_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        c_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        c_d0 = grp_lstm_forward_once_fu_220_c_d0.read();
    } else {
        c_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top::thread_c_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i4_fu_366_p2.read()))) {
        c_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        c_we0 = grp_lstm_forward_once_fu_220_c_we0.read();
    } else {
        c_we0 = ap_const_logic_0;
    }
}

void top::thread_dense_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        dense_output_address0 = grp_softmax_forward_fu_268_dense_output_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dense_output_address0 = grp_dense_forward_fu_256_dense_output_address0.read();
    } else {
        dense_output_address0 = "XXXXXXX";
    }
}

void top::thread_dense_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        dense_output_ce0 = grp_softmax_forward_fu_268_dense_output_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dense_output_ce0 = grp_dense_forward_fu_256_dense_output_ce0.read();
    } else {
        dense_output_ce0 = ap_const_logic_0;
    }
}

void top::thread_dense_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dense_output_we0 = grp_dense_forward_fu_256_dense_output_we0.read();
    } else {
        dense_output_we0 = ap_const_logic_0;
    }
}

void top::thread_exitcond1_i4_fu_366_p2() {
    exitcond1_i4_fu_366_p2 = (!i_i3_reg_186.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i_i3_reg_186.read() == ap_const_lv8_80);
}

void top::thread_exitcond1_i_fu_298_p2() {
    exitcond1_i_fu_298_p2 = (!i_i_reg_164.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_164.read() == ap_const_lv5_1C);
}

void top::thread_exitcond_fu_396_p2() {
    exitcond_fu_396_p2 = (!i_reg_209.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_209.read() == ap_const_lv4_A);
}

void top::thread_exitcond_i6_fu_384_p2() {
    exitcond_i6_fu_384_p2 = (!i1_i_reg_197.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(i1_i_reg_197.read() == ap_const_lv5_1C);
}

void top::thread_exitcond_i_fu_340_p2() {
    exitcond_i_fu_340_p2 = (!j_i_reg_175.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_175.read() == ap_const_lv5_1C);
}

void top::thread_grp_dense_forward_fu_256_ap_start() {
    grp_dense_forward_fu_256_ap_start = grp_dense_forward_fu_256_ap_start_reg.read();
}

void top::thread_grp_lstm_forward_once_fu_220_ap_start() {
    grp_lstm_forward_once_fu_220_ap_start = grp_lstm_forward_once_fu_220_ap_start_reg.read();
}

void top::thread_grp_softmax_forward_fu_268_ap_start() {
    grp_softmax_forward_fu_268_ap_start = grp_softmax_forward_fu_268_ap_start_reg.read();
}

void top::thread_h_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        h_address0 =  (sc_lv<7>) (tmp_i5_fu_378_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        h_address0 = grp_dense_forward_fu_256_h_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        h_address0 = grp_lstm_forward_once_fu_220_h_address0.read();
    } else {
        h_address0 = "XXXXXXX";
    }
}

void top::thread_h_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        h_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        h_ce0 = grp_dense_forward_fu_256_h_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        h_ce0 = grp_lstm_forward_once_fu_220_h_ce0.read();
    } else {
        h_ce0 = ap_const_logic_0;
    }
}

void top::thread_h_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        h_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        h_d0 = grp_lstm_forward_once_fu_220_h_d0.read();
    } else {
        h_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top::thread_h_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i4_fu_366_p2.read()))) {
        h_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        h_we0 = grp_lstm_forward_once_fu_220_h_we0.read();
    } else {
        h_we0 = ap_const_logic_0;
    }
}

void top::thread_i_1_fu_402_p2() {
    i_1_fu_402_p2 = (!i_reg_209.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_209.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_i_2_fu_372_p2() {
    i_2_fu_372_p2 = (!i_i3_reg_186.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_i3_reg_186.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void top::thread_i_3_fu_304_p2() {
    i_3_fu_304_p2 = (!i_i_reg_164.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_i_reg_164.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void top::thread_i_4_fu_390_p2() {
    i_4_fu_390_p2 = (!i1_i_reg_197.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i1_i_reg_197.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void top::thread_img_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        img_address0 = img_addr_reg_434.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        img_address0 =  (sc_lv<10>) (tmp_4_cast_fu_361_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        img_address0 = grp_lstm_forward_once_fu_220_img_line_address0.read();
    } else {
        img_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void top::thread_img_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        img_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        img_ce0 = grp_lstm_forward_once_fu_220_img_line_ce0.read();
    } else {
        img_ce0 = ap_const_logic_0;
    }
}

void top::thread_img_d0() {
    img_d0 = tmp_108_i_fu_280_p1.read();
}

void top::thread_img_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        img_we0 = ap_const_logic_1;
    } else {
        img_we0 = ap_const_logic_0;
    }
}

void top::thread_j_fu_346_p2() {
    j_fu_346_p2 = (!j_i_reg_175.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_i_reg_175.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void top::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<4>) (tmp_reg_478.read());
}

void top::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void top::thread_output_r_d0() {
    output_r_d0 = softmax_output_q0.read();
}

void top::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void top::thread_p_shl1_cast_fu_330_p1() {
    p_shl1_cast_fu_330_p1 = esl_zext<11,7>(tmp_2_fu_322_p3.read());
}

void top::thread_p_shl_cast_fu_318_p1() {
    p_shl_cast_fu_318_p1 = esl_zext<11,10>(tmp_1_fu_310_p3.read());
}

void top::thread_softmax_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        softmax_output_address0 =  (sc_lv<4>) (tmp_fu_408_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        softmax_output_address0 = grp_softmax_forward_fu_268_softmax_output_address0.read();
    } else {
        softmax_output_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_softmax_output_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        softmax_output_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        softmax_output_ce0 = grp_softmax_forward_fu_268_softmax_output_ce0.read();
    } else {
        softmax_output_ce0 = ap_const_logic_0;
    }
}

void top::thread_softmax_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        softmax_output_we0 = grp_softmax_forward_fu_268_softmax_output_we0.read();
    } else {
        softmax_output_we0 = ap_const_logic_0;
    }
}

void top::thread_tmp_1_fu_310_p3() {
    tmp_1_fu_310_p3 = esl_concat<5,5>(i_i_reg_164.read(), ap_const_lv5_0);
}

void top::thread_tmp_2_fu_322_p3() {
    tmp_2_fu_322_p3 = esl_concat<5,2>(i_i_reg_164.read(), ap_const_lv2_0);
}

void top::thread_tmp_3_fu_334_p2() {
    tmp_3_fu_334_p2 = (!p_shl_cast_fu_318_p1.read().is_01() || !p_shl1_cast_fu_330_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_318_p1.read()) - sc_biguint<11>(p_shl1_cast_fu_330_p1.read()));
}

void top::thread_tmp_4_cast_fu_361_p1() {
    tmp_4_cast_fu_361_p1 = esl_sext<64,11>(tmp_4_fu_356_p2.read());
}

void top::thread_tmp_4_fu_356_p2() {
    tmp_4_fu_356_p2 = (!tmp_3_reg_421.read().is_01() || !tmp_i_cast_fu_352_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_3_reg_421.read()) + sc_biguint<11>(tmp_i_cast_fu_352_p1.read()));
}

void top::thread_tmp_fu_408_p1() {
    tmp_fu_408_p1 = esl_zext<64,4>(i_reg_209.read());
}

void top::thread_tmp_i5_fu_378_p1() {
    tmp_i5_fu_378_p1 = esl_zext<64,8>(i_i3_reg_186.read());
}

void top::thread_tmp_i_cast_fu_352_p1() {
    tmp_i_cast_fu_352_p1 = esl_zext<11,5>(j_i_reg_175.read());
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_298_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_i_fu_340_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i4_fu_366_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i6_fu_384_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(grp_lstm_forward_once_fu_220_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(grp_dense_forward_fu_256_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(grp_softmax_forward_fu_268_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(exitcond_fu_396_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_address0\" :  \"" << img_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_ce0\" :  \"" << img_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_we0\" :  \"" << img_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"img_d0\" :  \"" << img_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"img_q0\" :  \"" << img_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

