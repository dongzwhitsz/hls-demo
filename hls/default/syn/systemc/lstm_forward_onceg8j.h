// ==============================================================
// File generated on Mon Jul 15 22:03:00 +0800 2019
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __lstm_forward_onceg8j_H__
#define __lstm_forward_onceg8j_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct lstm_forward_onceg8j_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(lstm_forward_onceg8j_ram) {
        ram[0] = "0b00111100001010110011110100100110";
        ram[1] = "0b10111101010101101111101010000110";
        ram[2] = "0b10111100101111111001001010101000";
        ram[3] = "0b10111100101100110000100000111100";
        ram[4] = "0b10111101001101001011001011011001";
        ram[5] = "0b10111101001001011111111101011101";
        ram[6] = "0b10111010111101001000110001001000";
        ram[7] = "0b00111011110111110101100001001000";
        ram[8] = "0b10111100110001101110110011000001";
        ram[9] = "0b10111101101000110100111010101100";
        ram[10] = "0b00111101010011000101100101010101";
        ram[11] = "0b10111101011111001111111011011010";
        ram[12] = "0b10111100010001101001111110011100";
        ram[13] = "0b00111101110010110111110011111111";
        ram[14] = "0b10111101011000100001100111001111";
        ram[15] = "0b10111100101010010000110100111011";
        ram[16] = "0b10111100111101101010110100110010";
        ram[17] = "0b10111101100011010010101101100100";
        ram[18] = "0b10111101000110010011011010110100";
        ram[19] = "0b10111011100111001100101010010111";
        ram[20] = "0b10111101001000011100011111101100";
        ram[21] = "0b10111101001001100000011011000101";
        ram[22] = "0b10111101100000011011010111110111";
        ram[23] = "0b10111101000000000000010101010100";
        ram[24] = "0b00111100100110010011000101101111";
        ram[25] = "0b00111101100101011000011101001110";
        ram[26] = "0b10111101011000010000011110100000";
        ram[27] = "0b10111101001011001010000001000100";
        ram[28] = "0b10111100101011101111110001010010";
        ram[29] = "0b10111101011011101010101101101110";
        ram[30] = "0b00111100000100011010100010101001";
        ram[31] = "0b10111011001111011100000000001010";
        ram[32] = "0b10111101000110001011111001000101";
        ram[33] = "0b10111100101010111111010110100010";
        ram[34] = "0b00111100101011111010101010101110";
        ram[35] = "0b00111101010010110100110111111001";
        ram[36] = "0b10111101011010000100010000111110";
        ram[37] = "0b00111101011011101011111100111011";
        ram[38] = "0b00111011101101001101111100111001";
        ram[39] = "0b10111101001111110111100010011100";
        ram[40] = "0b00111101010110110000001110010111";
        ram[41] = "0b10111011100110000011010111100110";
        ram[42] = "0b10111100000010110000110111010101";
        ram[43] = "0b10111101010000100001110000110110";
        ram[44] = "0b10111101010111001111101110010011";
        ram[45] = "0b00111100011011000110101000100110";
        ram[46] = "0b00111100101111100101110100101100";
        ram[47] = "0b10111100011001011011111011011010";
        ram[48] = "0b10111101101010000101111110011100";
        ram[49] = "0b00111100110000101111100100100011";
        ram[50] = "0b10111100001001110110010000101000";
        ram[51] = "0b10111100010111000001101111111100";
        ram[52] = "0b10111011101011000011001101011011";
        ram[53] = "0b10111101000100011001001111001100";
        ram[54] = "0b10111101000111111110111011100011";
        ram[55] = "0b10111100110100010111110101000000";
        ram[56] = "0b10111011101000001010011101111100";
        ram[57] = "0b10111101100000110110001000111101";
        ram[58] = "0b10111100110100001101000101111111";
        ram[59] = "0b10111101100011100011111111011011";
        ram[60] = "0b00111011010110110111111100000001";
        ram[61] = "0b10111100010010101000101101100001";
        ram[62] = "0b10111101000010100011100011110010";
        ram[63] = "0b10111100111011001110110111011000";
        ram[64] = "0b10111100110010011110000001011110";
        ram[65] = "0b10111101001101110000110110011110";
        ram[66] = "0b10111101101010010000101010110101";
        ram[67] = "0b10111011100101010101001000010110";
        ram[68] = "0b10111100101011010000111111010000";
        ram[69] = "0b00111100001000010111101100011101";
        ram[70] = "0b00111101011110010000110001110010";
        ram[71] = "0b00111101000111101101100110111111";
        ram[72] = "0b10111100101111100001111000101010";
        ram[73] = "0b00111011111100100100001111011000";
        ram[74] = "0b10111101100010110100001101110010";
        ram[75] = "0b10111101100011001111000110011010";
        ram[76] = "0b10111101101000101100110010001100";
        ram[77] = "0b00111101001001111110101011010010";
        ram[78] = "0b10111101101001011011011111000011";
        ram[79] = "0b10111100111001000111010111110100";
        ram[80] = "0b00111001111101000111110100111101";
        ram[81] = "0b10111100011100111011010100000011";
        ram[82] = "0b00111100000110100100110111000011";
        ram[83] = "0b10111011000000110101111000110000";
        ram[84] = "0b10111110000000001010000111101011";
        ram[85] = "0b10111101001000011011100111001100";
        ram[86] = "0b10111100100011011110101110101000";
        ram[87] = "0b00111100101111101011111110101010";
        ram[88] = "0b10111101010111101001111001010011";
        ram[89] = "0b10111101101001000011011010000111";
        ram[90] = "0b10111100101100000111000001011100";
        ram[91] = "0b10111011101111100111001100000111";
        ram[92] = "0b00111100000111100111010101000111";
        ram[93] = "0b00111100110111001011111000001011";
        ram[94] = "0b10111101111100001000010010110010";
        ram[95] = "0b10111101100001001100001001100000";
        ram[96] = "0b00111011111100101001011010110100";
        ram[97] = "0b10111100010010110010000101100101";
        ram[98] = "0b00111100101010111110001110000000";
        ram[99] = "0b10111100011101110101001011011100";
        ram[100] = "0b10111011100001000111000010001010";
        ram[101] = "0b10111101010111111100100001110100";
        ram[102] = "0b10111100011001110000000011011111";
        ram[103] = "0b10111101001011000011001010101111";
        ram[104] = "0b00111001011011001101111011111000";
        ram[105] = "0b10111100011010010011001000000110";
        ram[106] = "0b10111101011110101011000100010110";
        ram[107] = "0b10111101001110010001100001101110";
        ram[108] = "0b10111100111001010011001011110111";
        ram[109] = "0b00111011010110110111001011100101";
        ram[110] = "0b10111100011000000001011010000011";
        ram[111] = "0b10111011101101110000101001011100";
        ram[112] = "0b10111101001110010110000010000001";
        ram[113] = "0b10111101010111101011100011101100";
        ram[114] = "0b10111101001100010011001110110001";
        ram[115] = "0b10111011011111110101010011000101";
        ram[116] = "0b10111100100011011011101100111100";
        ram[117] = "0b10111011111001110011001111110010";
        ram[118] = "0b10111101000011011001011100111011";
        ram[119] = "0b00111010100011111110001110100100";
        ram[120] = "0b10111100110101110000101111100111";
        ram[121] = "0b10111101000110111010011100101001";
        ram[122] = "0b10111101001101101101111111100101";
        ram[123] = "0b10111101010011101111111100100000";
        ram[124] = "0b00111100110101100010001111111011";
        ram[125] = "0b10111100100110001000000110011110";
        ram[126] = "0b10111100110110001100110111100010";
        ram[127] = "0b10111100100010100101000101000100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(lstm_forward_onceg8j) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


lstm_forward_onceg8j_ram* meminst;


SC_CTOR(lstm_forward_onceg8j) {
meminst = new lstm_forward_onceg8j_ram("lstm_forward_onceg8j_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~lstm_forward_onceg8j() {
    delete meminst;
}


};//endmodule
#endif
