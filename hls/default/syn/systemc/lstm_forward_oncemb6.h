// ==============================================================
// File generated on Mon Jul 15 22:03:03 +0800 2019
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __lstm_forward_oncemb6_H__
#define __lstm_forward_oncemb6_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct lstm_forward_oncemb6_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(lstm_forward_oncemb6_ram) {
        ram[0] = "0b00111100110001010000101011100100";
        ram[1] = "0b10111011010101001011010111101100";
        ram[2] = "0b00111100110100110000001111101010";
        ram[3] = "0b10111011001010010000111111010011";
        ram[4] = "0b00111100011101001011010000001010";
        ram[5] = "0b10111011101101101111110111010011";
        ram[6] = "0b00111100101101010010001101110100";
        ram[7] = "0b00111101101110001011001010100011";
        ram[8] = "0b00111101011110101010011110100100";
        ram[9] = "0b00111101101010100111101011110000";
        ram[10] = "0b00111110001010100111001111001100";
        ram[11] = "0b00111101000100001101110010010000";
        ram[12] = "0b00111101110010110010110001001111";
        ram[13] = "0b00111101111100110000111011110111";
        ram[14] = "0b10111100111011111100000101110101";
        ram[15] = "0b00111101001000111001110010100011";
        ram[16] = "0b00111101110000100111011010100000";
        ram[17] = "0b00111011110001110001010001101101";
        ram[18] = "0b10111100101010011001111011000010";
        ram[19] = "0b00111100010111110001000010111000";
        ram[20] = "0b00111101010000101111010110111101";
        ram[21] = "0b00111100111110101100110110111001";
        ram[22] = "0b00111101010101101001100011000010";
        ram[23] = "0b00111101110000101011001111110110";
        ram[24] = "0b00111110001010111000111110011100";
        ram[25] = "0b00111101100111101010110011100101";
        ram[26] = "0b00111100100101000101001100100011";
        ram[27] = "0b00111101100010000110011011111010";
        ram[28] = "0b10111100100001101011100010010100";
        ram[29] = "0b10111101000111001101111101000010";
        ram[30] = "0b00111101010000100001110111000011";
        ram[31] = "0b00111100110101000000110001011001";
        ram[32] = "0b00111011011000010010001010000001";
        ram[33] = "0b00111101100000111110101100011111";
        ram[34] = "0b00111011010111010110001100110010";
        ram[35] = "0b00111101100101001111011001101011";
        ram[36] = "0b10111100100101000000111111001110";
        ram[37] = "0b00111100101010010000101010101100";
        ram[38] = "0b00111101100101111111100000101000";
        ram[39] = "0b10111011110011000100100101010101";
        ram[40] = "0b00111101011111000000001011101010";
        ram[41] = "0b00111011010101010000111100100000";
        ram[42] = "0b00111101111110110001101000000111";
        ram[43] = "0b00111100001010100001001101110101";
        ram[44] = "0b10111101000001110010100101000010";
        ram[45] = "0b00111100100001010000101010000001";
        ram[46] = "0b00111010011111110100100010101000";
        ram[47] = "0b10111011100010100100001100001010";
        ram[48] = "0b00111101001001111011101100101111";
        ram[49] = "0b00111101010101011001010111010110";
        ram[50] = "0b00111101000100111011001111010111";
        ram[51] = "0b00111110001010100010101011001011";
        ram[52] = "0b00111101010010011011100110010100";
        ram[53] = "0b00111100101010101001100001010000";
        ram[54] = "0b00111100001101101010111101010010";
        ram[55] = "0b00111101011101010111000000011010";
        ram[56] = "0b00111101001010110001110000111100";
        ram[57] = "0b00111101011000100101011100100100";
        ram[58] = "0b00111101000101010000010011101101";
        ram[59] = "0b00111011000101111000011001111000";
        ram[60] = "0b00111101110001111100111000111100";
        ram[61] = "0b10111100100110000000101101010111";
        ram[62] = "0b00111101000101111011000000111000";
        ram[63] = "0b00111100111111111011100010011000";
        ram[64] = "0b00111100110100011100100111100001";
        ram[65] = "0b10111100110101101011001111010111";
        ram[66] = "0b00111100111111001011111011110011";
        ram[67] = "0b00111011101101111001001100011000";
        ram[68] = "0b00111101010011101000111001010110";
        ram[69] = "0b00111100111011101000010011111100";
        ram[70] = "0b00111101111000100101011110000101";
        ram[71] = "0b10111100000011010000111011110110";
        ram[72] = "0b00111101111011111111000000011011";
        ram[73] = "0b00111101011001010111100111100001";
        ram[74] = "0b10111100010101110111001001011001";
        ram[75] = "0b10111100100101100010001011100110";
        ram[76] = "0b00111101001010011100100110111111";
        ram[77] = "0b00111101110111010001010100110011";
        ram[78] = "0b00111100110000011010000000011011";
        ram[79] = "0b00111101110100010010011000011110";
        ram[80] = "0b00111110000010111111011000011100";
        ram[81] = "0b00111010100101011001111110000000";
        ram[82] = "0b00111101111100100110100111010000";
        ram[83] = "0b00111101010110110011100101111100";
        ram[84] = "0b10111100011110011100000011110101";
        ram[85] = "0b00111100011011010101001111001011";
        ram[86] = "0b10111101001101000100111101111110";
        ram[87] = "0b00111101000110111001001011001001";
        ram[88] = "0b10111011100110100101101001111111";
        ram[89] = "0b00111101001011001110110011101110";
        ram[90] = "0b00111101010101011011011110100000";
        ram[91] = "0b00111101100010001101011000000111";
        ram[92] = "0b00111101000011110100001101010011";
        ram[93] = "0b00111100100101110010101011111010";
        ram[94] = "0b10111101100011100001110011010010";
        ram[95] = "0b10111101001111000010001111101010";
        ram[96] = "0b00111010000110001001110111101011";
        ram[97] = "0b00111101100101010010100011001100";
        ram[98] = "0b00111100101010010000100110010100";
        ram[99] = "0b10111011001110100001101111001001";
        ram[100] = "0b00111100010110100011101110000001";
        ram[101] = "0b10111011101110100011111010011010";
        ram[102] = "0b00111101100100011101111000001000";
        ram[103] = "0b10111101001001100110110111011110";
        ram[104] = "0b00111101101000001000101010000111";
        ram[105] = "0b00111101100101001100101010110010";
        ram[106] = "0b00111101011111100000100000010000";
        ram[107] = "0b10111100011010001011101000010110";
        ram[108] = "0b00111101100001110010100101000001";
        ram[109] = "0b00111101010011100001111000110000";
        ram[110] = "0b00111110001100101111010110101010";
        ram[111] = "0b00111101101010110001110011000011";
        ram[112] = "0b00111101101111111101001001000010";
        ram[113] = "0b10111011101001011100001001000101";
        ram[114] = "0b10111100101001011001001100100111";
        ram[115] = "0b00111100111001001100011101110110";
        ram[116] = "0b00111101100011101011010011010010";
        ram[117] = "0b00111101110101011100010101110100";
        ram[118] = "0b00111100111110001010001000110100";
        ram[119] = "0b00111100010110111111101011101000";
        ram[120] = "0b10111011011011001010111000110111";
        ram[121] = "0b00111110000000110010101100010101";
        ram[122] = "0b00111101101010011011111111110011";
        ram[123] = "0b00111101110100101000101011011110";
        ram[124] = "0b00111101000001111011001111010000";
        ram[125] = "0b00111100110110101010010100001110";
        ram[126] = "0b10111101010110001100101111110111";
        ram[127] = "0b00111101010001111111111001001001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(lstm_forward_oncemb6) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


lstm_forward_oncemb6_ram* meminst;


SC_CTOR(lstm_forward_oncemb6) {
meminst = new lstm_forward_oncemb6_ram("lstm_forward_oncemb6_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~lstm_forward_oncemb6() {
    delete meminst;
}


};//endmodule
#endif
