// ==============================================================
// File generated on Mon Jul 15 22:02:58 +0800 2019
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __lstm_forward_oncedEe_H__
#define __lstm_forward_oncedEe_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct lstm_forward_oncedEe_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(lstm_forward_oncedEe_ram) {
        ram[0] = "0b00111111011110110001101010110000";
        ram[1] = "0b00111111011101100111100101111010";
        ram[2] = "0b00111111100000111101110011110010";
        ram[3] = "0b00111111100000100011100011001001";
        ram[4] = "0b00111111011101111110100000010111";
        ram[5] = "0b00111111100001000111000001011000";
        ram[6] = "0b00111111100000111100110110011000";
        ram[7] = "0b00111111100001001100011100101100";
        ram[8] = "0b00111111100001010111011001101001";
        ram[9] = "0b00111111100001111100011001101100";
        ram[10] = "0b00111111011111101110111010011101";
        ram[11] = "0b00111111100000110001101101011001";
        ram[12] = "0b00111111011111000001101010100001";
        ram[13] = "0b00111111100000110011000111011000";
        ram[14] = "0b00111111100000100110010000110010";
        ram[15] = "0b00111111011100110000111111011110";
        ram[16] = "0b00111111011101100110001101111100";
        ram[17] = "0b00111111100001110110001100011110";
        ram[18] = "0b00111111100000011011100001010111";
        ram[19] = "0b00111111100001010000100111010100";
        ram[20] = "0b00111111011111100101000000001001";
        ram[21] = "0b00111111100000110111011110000011";
        ram[22] = "0b00111111100000010001111101011110";
        ram[23] = "0b00111111011111010000001111111001";
        ram[24] = "0b00111111011111111010001001100001";
        ram[25] = "0b00111111100000011110100111100101";
        ram[26] = "0b00111111100000000110001101101001";
        ram[27] = "0b00111111100000011101111111111110";
        ram[28] = "0b00111111100000011100110111011100";
        ram[29] = "0b00111111011101010101111011001111";
        ram[30] = "0b00111111011110011001000111001101";
        ram[31] = "0b00111111100010000110011100100000";
        ram[32] = "0b00111111100000000001011100110001";
        ram[33] = "0b00111111100000011011101110010110";
        ram[34] = "0b00111111011111001000110111010110";
        ram[35] = "0b00111111100000100100111000111010";
        ram[36] = "0b00111111011111101111000100001101";
        ram[37] = "0b00111111100000001111101001101100";
        ram[38] = "0b00111111100000111111001000001000";
        ram[39] = "0b00111111011110101100101101110000";
        ram[40] = "0b00111111100000011000001100011110";
        ram[41] = "0b00111111011101101101001011001101";
        ram[42] = "0b00111111100001010111101111100110";
        ram[43] = "0b00111111011101001011101101001011";
        ram[44] = "0b00111111100001010011000101010110";
        ram[45] = "0b00111111100000001100001000001001";
        ram[46] = "0b00111111011010101000111000111001";
        ram[47] = "0b00111111100000000110010001111001";
        ram[48] = "0b00111111100001000110100110101100";
        ram[49] = "0b00111111011111011001101000101011";
        ram[50] = "0b00111111100000010111011101000110";
        ram[51] = "0b00111111011110010011110001101100";
        ram[52] = "0b00111111100000100101011011011100";
        ram[53] = "0b00111111011111101001100000000000";
        ram[54] = "0b00111111100000001111000000011001";
        ram[55] = "0b00111111100000000010111000000110";
        ram[56] = "0b00111111100001010100101000111011";
        ram[57] = "0b00111111011111001110110111001110";
        ram[58] = "0b00111111100000011110101100011000";
        ram[59] = "0b00111111100000011010100010100111";
        ram[60] = "0b00111111100000000110001101000110";
        ram[61] = "0b00111111011111101101001001001000";
        ram[62] = "0b00111111100000001111010111110011";
        ram[63] = "0b00111111100010100101100010011001";
        ram[64] = "0b00111111011110011101110000101000";
        ram[65] = "0b00111111011101110010011010001001";
        ram[66] = "0b00111111100001101011101010100110";
        ram[67] = "0b00111111100010101001100101101111";
        ram[68] = "0b00111111100000010111101000010001";
        ram[69] = "0b00111111100000000100110101111011";
        ram[70] = "0b00111111011101110000100011001000";
        ram[71] = "0b00111111100000100101110100110111";
        ram[72] = "0b00111111100000011100111011010101";
        ram[73] = "0b00111111100000100001000100001001";
        ram[74] = "0b00111111100001000011010101100001";
        ram[75] = "0b00111111100000100010111000000010";
        ram[76] = "0b00111111011110111101111000011111";
        ram[77] = "0b00111111011011010011010001100001";
        ram[78] = "0b00111111100000100011110110001000";
        ram[79] = "0b00111111100001010000011000011001";
        ram[80] = "0b00111111011111011111010000001111";
        ram[81] = "0b00111111011110011110111101100010";
        ram[82] = "0b00111111011011110001111000101110";
        ram[83] = "0b00111111100000001110001111111111";
        ram[84] = "0b00111111100000100110000110100100";
        ram[85] = "0b00111111100010101110101101001101";
        ram[86] = "0b00111111100001110101001001111010";
        ram[87] = "0b00111111011111010100100011110100";
        ram[88] = "0b00111111011110111011100101000100";
        ram[89] = "0b00111111100001011001111101010001";
        ram[90] = "0b00111111100000001011001011111111";
        ram[91] = "0b00111111011100101110101000100110";
        ram[92] = "0b00111111100001011111100010100111";
        ram[93] = "0b00111111100001000011111110001010";
        ram[94] = "0b00111111100001110100000010101101";
        ram[95] = "0b00111111011110010110011010100010";
        ram[96] = "0b00111111100001010010000001000101";
        ram[97] = "0b00111111100000001101100101100101";
        ram[98] = "0b00111111100000000000010101110111";
        ram[99] = "0b00111111011111111001010010001001";
        ram[100] = "0b00111111100000000101100110100111";
        ram[101] = "0b00111111100000100000101001100001";
        ram[102] = "0b00111111100000000010001100110000";
        ram[103] = "0b00111111011010100110000000101011";
        ram[104] = "0b00111111100001011100001100111101";
        ram[105] = "0b00111111011111100010001011010001";
        ram[106] = "0b00111111011100001011110101110011";
        ram[107] = "0b00111111100001010000001011000011";
        ram[108] = "0b00111111100000101110101111010100";
        ram[109] = "0b00111111011101110101000001110011";
        ram[110] = "0b00111111100000111111001000111000";
        ram[111] = "0b00111111011101000000001000000101";
        ram[112] = "0b00111111100000011010010010111101";
        ram[113] = "0b00111111011110100011000010100011";
        ram[114] = "0b00111111011110011001111000000011";
        ram[115] = "0b00111111011101011010011101100010";
        ram[116] = "0b00111111100000010101010010110110";
        ram[117] = "0b00111111011110101101001001011110";
        ram[118] = "0b00111111011110111111010111011111";
        ram[119] = "0b00111111100000101111010001010111";
        ram[120] = "0b00111111100000000111000010100011";
        ram[121] = "0b00111111011111010100110101111101";
        ram[122] = "0b00111111100001000001110000111101";
        ram[123] = "0b00111111011101110001100001000100";
        ram[124] = "0b00111111011111100100100111101011";
        ram[125] = "0b00111111100000100110100001001100";
        ram[126] = "0b00111111100001011011101010111101";
        ram[127] = "0b00111111011100100110000110100001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(lstm_forward_oncedEe) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


lstm_forward_oncedEe_ram* meminst;


SC_CTOR(lstm_forward_oncedEe) {
meminst = new lstm_forward_oncedEe_ram("lstm_forward_oncedEe_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~lstm_forward_oncedEe() {
    delete meminst;
}


};//endmodule
#endif
