// ==============================================================
// File generated on Mon Jul 15 22:03:05 +0800 2019
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __dense_forward_denIfE_H__
#define __dense_forward_denIfE_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_forward_denIfE_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_forward_denIfE_ram) {
        ram[0] = "0b10111101001001100010001011101011";
        ram[1] = "0b00111010100100101000010111001000";
        ram[2] = "0b00111101001100000110101011011010";
        ram[3] = "0b10111100101011101010011110100101";
        ram[4] = "0b10111100101101110001110101111100";
        ram[5] = "0b10111100011101010010000011100101";
        ram[6] = "0b00111101000011011101100000111100";
        ram[7] = "0b10111010101000110011100100100011";
        ram[8] = "0b10111101001111001101000101010110";
        ram[9] = "0b10111100100111001000100010010110";
        ram[10] = "0b00111011111101101110000111111000";
        ram[11] = "0b00111010001010110101011010101100";
        ram[12] = "0b10111011110010001000010110100001";
        ram[13] = "0b10111101010100010010000000101001";
        ram[14] = "0b10111100100000000001010101001011";
        ram[15] = "0b00111011011010000011100010110101";
        ram[16] = "0b00111101000001110011011101111100";
        ram[17] = "0b10111011111110011010111110111010";
        ram[18] = "0b10111100111100100010000111100000";
        ram[19] = "0b00111101100001111101100101001011";
        ram[20] = "0b00111011011110111100010111111011";
        ram[21] = "0b10111101011011111011011110010111";
        ram[22] = "0b00111101100001010111000000011001";
        ram[23] = "0b10111100101101011110110010001111";
        ram[24] = "0b00111100010101101011011010000111";
        ram[25] = "0b10111101011011000101110000101001";
        ram[26] = "0b10111101011000101110100000000111";
        ram[27] = "0b10111100110001101000000000111001";
        ram[28] = "0b10111100100110010000110111011001";
        ram[29] = "0b10111101001100101101011111111100";
        ram[30] = "0b10111101100001101000110001010111";
        ram[31] = "0b00111101000110111010010001000000";
        ram[32] = "0b00111101010110100001101100101001";
        ram[33] = "0b00111101000011000111111110100010";
        ram[34] = "0b00111100001111100110001011011100";
        ram[35] = "0b00111101010110100110001100100001";
        ram[36] = "0b10111101100001101001000111100001";
        ram[37] = "0b10111101010110100010111110001010";
        ram[38] = "0b10111101010001000011001011001100";
        ram[39] = "0b10111101010000110100000011111101";
        ram[40] = "0b10111101100101101100101101101001";
        ram[41] = "0b00111100111010110111110001000110";
        ram[42] = "0b10111101010100111001011000011000";
        ram[43] = "0b00111100111101010110111111111011";
        ram[44] = "0b00111100011011010011000111010101";
        ram[45] = "0b00111100111101011011100000001111";
        ram[46] = "0b10111100101111011111111100001110";
        ram[47] = "0b10111011110111001111011011100100";
        ram[48] = "0b10111101000001000110101011111011";
        ram[49] = "0b00111100000000001100001001100111";
        ram[50] = "0b10111101100000101111000111111101";
        ram[51] = "0b00111101011000010111011100000011";
        ram[52] = "0b10111100101000011100111111100010";
        ram[53] = "0b00111101000001100100100111001011";
        ram[54] = "0b00111100011001011101100100100110";
        ram[55] = "0b10111100101100000011101110111001";
        ram[56] = "0b00111101000101000111011011100101";
        ram[57] = "0b10111100001111001001111110001010";
        ram[58] = "0b00111011110100100000001111100100";
        ram[59] = "0b00111101011110101000001010110011";
        ram[60] = "0b00111101000010011000010001011000";
        ram[61] = "0b00111100110110010001000010101011";
        ram[62] = "0b10111011101100101110110100001110";
        ram[63] = "0b10111101100001011011011000001000";
        ram[64] = "0b00111101011100101010001111101111";
        ram[65] = "0b10111100100101000100011101101100";
        ram[66] = "0b00111100101101001100000100011000";
        ram[67] = "0b00111100111111001111011101010101";
        ram[68] = "0b10111101010001110000110101001011";
        ram[69] = "0b00111100100000000101001110001001";
        ram[70] = "0b00111011101011010110110111001000";
        ram[71] = "0b00111010110011000111001000001100";
        ram[72] = "0b00111101000010010001000000001011";
        ram[73] = "0b00111100100001000011011011010000";
        ram[74] = "0b00111101000000100100011110000000";
        ram[75] = "0b00111101010010110100101011101010";
        ram[76] = "0b10111011101001101111000001111000";
        ram[77] = "0b00111100011110001001100110111110";
        ram[78] = "0b00111100111000011011101001101110";
        ram[79] = "0b00111011011101011001010000110100";
        ram[80] = "0b10111101000111011000010000010010";
        ram[81] = "0b10111011110001000001011001100010";
        ram[82] = "0b10111101001001011110101100100001";
        ram[83] = "0b00111101010111011110101101001010";
        ram[84] = "0b10111100110110000000110001001111";
        ram[85] = "0b00111101010010010010111110000110";
        ram[86] = "0b00111100001101011101110111101011";
        ram[87] = "0b10111101010101000111110001011101";
        ram[88] = "0b00111100101001011011110010010110";
        ram[89] = "0b00111011101111111001111101011110";
        ram[90] = "0b00111101010101011101001011001110";
        ram[91] = "0b10111011010001000000001001011010";
        ram[92] = "0b10111100111001100111010001111111";
        ram[93] = "0b10111100010000110111111000010111";
        ram[94] = "0b00111011101000110011100000110100";
        ram[95] = "0b10111100111000011101110010011000";
        ram[96] = "0b00111100110000000010101110001100";
        ram[97] = "0b00111101000000010111111100001000";
        ram[98] = "0b00111100100010010100101011101001";
        ram[99] = "0b00111011110101100111111010011110";
        ram[100] = "0b00111100100100000100001101101011";
        ram[101] = "0b10111001100101011001100111001100";
        ram[102] = "0b10111011010110100111000101011010";
        ram[103] = "0b00111101010101001110000110001100";
        ram[104] = "0b10111100100010101000010110000011";
        ram[105] = "0b10111101100010011011100100010010";
        ram[106] = "0b00111101101110100001011010111110";
        ram[107] = "0b10111101010110000100011100110111";
        ram[108] = "0b10111100100000101100000000110011";
        ram[109] = "0b10111100001001001111101001000000";
        ram[110] = "0b10111010110100101110010110110111";
        ram[111] = "0b00111100000001010110100001101111";
        ram[112] = "0b10111100110101010110100011101111";
        ram[113] = "0b10111101010100010000000001100001";
        ram[114] = "0b00111100110101001010111110000011";
        ram[115] = "0b00111101100110011010110000001111";
        ram[116] = "0b10111101001111000100011100110101";
        ram[117] = "0b10111100101010110111000110110101";
        ram[118] = "0b10111100100010100111100011110011";
        ram[119] = "0b00111101000111000000000111011011";
        ram[120] = "0b00111011101000110010010010001011";
        ram[121] = "0b00111101001110001001110000001010";
        ram[122] = "0b00111101110110101111010010101011";
        ram[123] = "0b10111100100011110110101100101010";
        ram[124] = "0b10111101000101100010000000001100";
        ram[125] = "0b10111100100010000110101010101101";
        ram[126] = "0b00111100011111011001001000010110";
        ram[127] = "0b10111101101010011000101010010100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_forward_denIfE) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_forward_denIfE_ram* meminst;


SC_CTOR(dense_forward_denIfE) {
meminst = new dense_forward_denIfE_ram("dense_forward_denIfE_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_forward_denIfE() {
    delete meminst;
}


};//endmodule
#endif
