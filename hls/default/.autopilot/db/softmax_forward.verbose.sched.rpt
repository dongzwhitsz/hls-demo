

================================================================
== Vivado HLS Report for 'softmax_forward'
================================================================
* Date:           Mon Jul 15 22:02:49 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hls
* Solution:       default
* Product family: zynq
* Target device:  xc7z020clg400-3


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.592|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  11612|  11612|  11612|  11612|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |             |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  11540|  11540|      1154|          -|          -|    10|    no    |
        | + Loop 1.1  |   1152|   1152|         9|          -|          -|   128|    no    |
        |- Loop 2     |     70|     70|         7|          -|          -|    10|    no    |
        +-------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	12  / (exitcond2)
3 --> 
	4  / (!exitcond1)
	2  / (exitcond1)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	3  / true
12 --> 
	13  / (!exitcond)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	12  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.17>
ST_1 : Operation 19 [1/1] (1.17ns)   --->   "br label %.loopexit" [src/rnn.cpp:335]   --->   Operation 19 'br' <Predicate = true> <Delay = 1.17>

State 2 <SV = 1> <Delay = 1.40>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%i = phi i4 [ 0, %0 ], [ %i_3, %.loopexit.loopexit ]"   --->   Operation 20 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.08ns)   --->   "%exitcond2 = icmp eq i4 %i, -6" [src/rnn.cpp:335]   --->   Operation 21 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 22 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.40ns)   --->   "%i_3 = add i4 %i, 1" [src/rnn.cpp:335]   --->   Operation 23 'add' 'i_3' <Predicate = true> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader.preheader, label %1" [src/rnn.cpp:335]   --->   Operation 24 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%tmp = zext i4 %i to i64" [src/rnn.cpp:337]   --->   Operation 25 'zext' 'tmp' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_cast = zext i4 %i to i12" [src/rnn.cpp:337]   --->   Operation 26 'zext' 'tmp_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%softmax_output_addr = getelementptr inbounds [10 x float]* @softmax_output, i64 0, i64 %tmp" [src/rnn.cpp:337]   --->   Operation 27 'getelementptr' 'softmax_output_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.17ns)   --->   "br label %2" [src/rnn.cpp:338]   --->   Operation 28 'br' <Predicate = (!exitcond2)> <Delay = 1.17>
ST_2 : Operation 29 [1/1] (1.17ns)   --->   "br label %.preheader" [src/rnn.cpp:342]   --->   Operation 29 'br' <Predicate = (exitcond2)> <Delay = 1.17>

State 3 <SV = 2> <Delay = 5.16>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%storemerge = phi float [ 0.000000e+00, %1 ], [ %tmp_9, %3 ]" [src/rnn.cpp:339]   --->   Operation 30 'phi' 'storemerge' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%j = phi i8 [ 0, %1 ], [ %j_1, %3 ]"   --->   Operation 31 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.56ns)   --->   "store float %storemerge, float* %softmax_output_addr, align 4" [src/rnn.cpp:339]   --->   Operation 32 'store' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 33 [1/1] (1.33ns)   --->   "%exitcond1 = icmp eq i8 %j, -128" [src/rnn.cpp:338]   --->   Operation 33 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.33> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)"   --->   Operation 34 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.62ns)   --->   "%j_1 = add i8 %j, 1" [src/rnn.cpp:338]   --->   Operation 35 'add' 'j_1' <Predicate = true> <Delay = 1.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.loopexit.loopexit, label %3" [src/rnn.cpp:338]   --->   Operation 36 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_7 = zext i8 %j to i64" [src/rnn.cpp:339]   --->   Operation 37 'zext' 'tmp_7' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_5 = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %j, i3 0)" [src/rnn.cpp:338]   --->   Operation 38 'bitconcatenate' 'tmp_5' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i11 %tmp_5 to i12" [src/rnn.cpp:338]   --->   Operation 39 'zext' 'p_shl_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_6 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %j, i1 false)" [src/rnn.cpp:338]   --->   Operation 40 'bitconcatenate' 'tmp_6' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i9 %tmp_6 to i12" [src/rnn.cpp:339]   --->   Operation 41 'zext' 'p_shl1_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_s = add i12 %p_shl1_cast, %p_shl_cast" [src/rnn.cpp:339]   --->   Operation 42 'add' 'tmp_s' <Predicate = (!exitcond1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.37> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (2.74ns) (root node of TernaryAdder)   --->   "%tmp_1 = add i12 %tmp_s, %tmp_cast" [src/rnn.cpp:339]   --->   Operation 43 'add' 'tmp_1' <Predicate = (!exitcond1)> <Delay = 2.74> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.37> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_11_cast = zext i12 %tmp_1 to i64" [src/rnn.cpp:339]   --->   Operation 44 'zext' 'tmp_11_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%softmax_kernel_addr = getelementptr [1280 x float]* @softmax_kernel, i64 0, i64 %tmp_11_cast" [src/rnn.cpp:339]   --->   Operation 45 'getelementptr' 'softmax_kernel_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 46 [2/2] (2.41ns)   --->   "%softmax_kernel_load = load float* %softmax_kernel_addr, align 4" [src/rnn.cpp:339]   --->   Operation 46 'load' 'softmax_kernel_load' <Predicate = (!exitcond1)> <Delay = 2.41> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%dense_output_addr = getelementptr [128 x float]* %dense_output, i64 0, i64 %tmp_7" [src/rnn.cpp:339]   --->   Operation 47 'getelementptr' 'dense_output_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (2.41ns)   --->   "%dense_output_load = load float* %dense_output_addr, align 4" [src/rnn.cpp:339]   --->   Operation 48 'load' 'dense_output_load' <Predicate = (!exitcond1)> <Delay = 2.41> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 49 'br' <Predicate = (exitcond1)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.41>
ST_4 : Operation 50 [1/2] (2.41ns)   --->   "%softmax_kernel_load = load float* %softmax_kernel_addr, align 4" [src/rnn.cpp:339]   --->   Operation 50 'load' 'softmax_kernel_load' <Predicate = true> <Delay = 2.41> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_4 : Operation 51 [1/2] (2.41ns)   --->   "%dense_output_load = load float* %dense_output_addr, align 4" [src/rnn.cpp:339]   --->   Operation 51 'load' 'dense_output_load' <Predicate = true> <Delay = 2.41> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 5 <SV = 4> <Delay = 7.59>
ST_5 : Operation 52 [3/3] (7.59ns)   --->   "%tmp_8 = fmul float %softmax_kernel_load, %dense_output_load" [src/rnn.cpp:339]   --->   Operation 52 'fmul' 'tmp_8' <Predicate = true> <Delay = 7.59> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 7.59> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.59>
ST_6 : Operation 53 [2/3] (7.59ns)   --->   "%tmp_8 = fmul float %softmax_kernel_load, %dense_output_load" [src/rnn.cpp:339]   --->   Operation 53 'fmul' 'tmp_8' <Predicate = true> <Delay = 7.59> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 7.59> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.59>
ST_7 : Operation 54 [1/3] (7.59ns)   --->   "%tmp_8 = fmul float %softmax_kernel_load, %dense_output_load" [src/rnn.cpp:339]   --->   Operation 54 'fmul' 'tmp_8' <Predicate = true> <Delay = 7.59> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 2> <II = 1> <Delay = 7.59> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.28>
ST_8 : Operation 55 [4/4] (7.28ns)   --->   "%tmp_9 = fadd float %storemerge, %tmp_8" [src/rnn.cpp:339]   --->   Operation 55 'fadd' 'tmp_9' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.28>
ST_9 : Operation 56 [3/4] (7.28ns)   --->   "%tmp_9 = fadd float %storemerge, %tmp_8" [src/rnn.cpp:339]   --->   Operation 56 'fadd' 'tmp_9' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.28>
ST_10 : Operation 57 [2/4] (7.28ns)   --->   "%tmp_9 = fadd float %storemerge, %tmp_8" [src/rnn.cpp:339]   --->   Operation 57 'fadd' 'tmp_9' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.28>
ST_11 : Operation 58 [1/4] (7.28ns)   --->   "%tmp_9 = fadd float %storemerge, %tmp_8" [src/rnn.cpp:339]   --->   Operation 58 'fadd' 'tmp_9' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 59 [1/1] (0.00ns)   --->   "br label %2" [src/rnn.cpp:338]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 2> <Delay = 2.41>
ST_12 : Operation 60 [1/1] (0.00ns)   --->   "%i1 = phi i4 [ %i_2, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 60 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 61 [1/1] (1.08ns)   --->   "%exitcond = icmp eq i4 %i1, -6" [src/rnn.cpp:342]   --->   Operation 61 'icmp' 'exitcond' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 62 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 62 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 63 [1/1] (1.40ns)   --->   "%i_2 = add i4 %i1, 1" [src/rnn.cpp:342]   --->   Operation 63 'add' 'i_2' <Predicate = true> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 64 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %5, label %4" [src/rnn.cpp:342]   --->   Operation 64 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_3 = zext i4 %i1 to i64" [src/rnn.cpp:344]   --->   Operation 65 'zext' 'tmp_3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 66 [1/1] (0.00ns)   --->   "%softmax_bias_addr = getelementptr inbounds [10 x float]* @softmax_bias, i64 0, i64 %tmp_3" [src/rnn.cpp:344]   --->   Operation 66 'getelementptr' 'softmax_bias_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 67 [2/2] (2.41ns)   --->   "%softmax_bias_load = load float* %softmax_bias_addr, align 4" [src/rnn.cpp:344]   --->   Operation 67 'load' 'softmax_bias_load' <Predicate = (!exitcond)> <Delay = 2.41> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_12 : Operation 68 [1/1] (0.00ns)   --->   "%softmax_output_addr_1 = getelementptr inbounds [10 x float]* @softmax_output, i64 0, i64 %tmp_3" [src/rnn.cpp:344]   --->   Operation 68 'getelementptr' 'softmax_output_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 69 [2/2] (1.56ns)   --->   "%softmax_output_load = load float* %softmax_output_addr_1, align 4" [src/rnn.cpp:344]   --->   Operation 69 'load' 'softmax_output_load' <Predicate = (!exitcond)> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_12 : Operation 70 [1/1] (0.00ns)   --->   "ret void" [src/rnn.cpp:357]   --->   Operation 70 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 13 <SV = 3> <Delay = 2.41>
ST_13 : Operation 71 [1/2] (2.41ns)   --->   "%softmax_bias_load = load float* %softmax_bias_addr, align 4" [src/rnn.cpp:344]   --->   Operation 71 'load' 'softmax_bias_load' <Predicate = true> <Delay = 2.41> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10> <ROM>
ST_13 : Operation 72 [1/2] (1.56ns)   --->   "%softmax_output_load = load float* %softmax_output_addr_1, align 4" [src/rnn.cpp:344]   --->   Operation 72 'load' 'softmax_output_load' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 14 <SV = 4> <Delay = 7.28>
ST_14 : Operation 73 [4/4] (7.28ns)   --->   "%tmp_4 = fadd float %softmax_output_load, %softmax_bias_load" [src/rnn.cpp:344]   --->   Operation 73 'fadd' 'tmp_4' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 5> <Delay = 7.28>
ST_15 : Operation 74 [3/4] (7.28ns)   --->   "%tmp_4 = fadd float %softmax_output_load, %softmax_bias_load" [src/rnn.cpp:344]   --->   Operation 74 'fadd' 'tmp_4' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 6> <Delay = 7.28>
ST_16 : Operation 75 [2/4] (7.28ns)   --->   "%tmp_4 = fadd float %softmax_output_load, %softmax_bias_load" [src/rnn.cpp:344]   --->   Operation 75 'fadd' 'tmp_4' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 7> <Delay = 7.28>
ST_17 : Operation 76 [1/4] (7.28ns)   --->   "%tmp_4 = fadd float %softmax_output_load, %softmax_bias_load" [src/rnn.cpp:344]   --->   Operation 76 'fadd' 'tmp_4' <Predicate = true> <Delay = 7.28> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.28> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 8> <Delay = 1.56>
ST_18 : Operation 77 [1/1] (1.56ns)   --->   "store float %tmp_4, float* %softmax_output_addr_1, align 4" [src/rnn.cpp:344]   --->   Operation 77 'store' <Predicate = true> <Delay = 1.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_18 : Operation 78 [1/1] (0.00ns)   --->   "br label %.preheader" [src/rnn.cpp:342]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', src/rnn.cpp:335) [7]  (1.18 ns)

 <State 2>: 1.41ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/rnn.cpp:335) [7]  (0 ns)
	'add' operation ('i', src/rnn.cpp:335) [10]  (1.41 ns)

 <State 3>: 5.16ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', src/rnn.cpp:338) [19]  (0 ns)
	'add' operation ('tmp_s', src/rnn.cpp:339) [31]  (0 ns)
	'add' operation ('tmp_1', src/rnn.cpp:339) [32]  (2.74 ns)
	'getelementptr' operation ('softmax_kernel_addr', src/rnn.cpp:339) [34]  (0 ns)
	'load' operation ('softmax_kernel_load', src/rnn.cpp:339) on array 'softmax_kernel' [35]  (2.42 ns)

 <State 4>: 2.42ns
The critical path consists of the following:
	'load' operation ('softmax_kernel_load', src/rnn.cpp:339) on array 'softmax_kernel' [35]  (2.42 ns)

 <State 5>: 7.59ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', src/rnn.cpp:339) [38]  (7.59 ns)

 <State 6>: 7.59ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', src/rnn.cpp:339) [38]  (7.59 ns)

 <State 7>: 7.59ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', src/rnn.cpp:339) [38]  (7.59 ns)

 <State 8>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_9', src/rnn.cpp:339) [39]  (7.28 ns)

 <State 9>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_9', src/rnn.cpp:339) [39]  (7.28 ns)

 <State 10>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_9', src/rnn.cpp:339) [39]  (7.28 ns)

 <State 11>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_9', src/rnn.cpp:339) [39]  (7.28 ns)

 <State 12>: 2.42ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/rnn.cpp:342) [46]  (0 ns)
	'getelementptr' operation ('softmax_bias_addr', src/rnn.cpp:344) [53]  (0 ns)
	'load' operation ('softmax_bias_load', src/rnn.cpp:344) on array 'softmax_bias' [54]  (2.42 ns)

 <State 13>: 2.42ns
The critical path consists of the following:
	'load' operation ('softmax_bias_load', src/rnn.cpp:344) on array 'softmax_bias' [54]  (2.42 ns)

 <State 14>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src/rnn.cpp:344) [57]  (7.28 ns)

 <State 15>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src/rnn.cpp:344) [57]  (7.28 ns)

 <State 16>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src/rnn.cpp:344) [57]  (7.28 ns)

 <State 17>: 7.28ns
The critical path consists of the following:
	'fadd' operation ('tmp_4', src/rnn.cpp:344) [57]  (7.28 ns)

 <State 18>: 1.57ns
The critical path consists of the following:
	'store' operation (src/rnn.cpp:344) of variable 'tmp_4', src/rnn.cpp:344 on array 'softmax_output' [58]  (1.57 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
