// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.354450,HLS_SYN_LAT=23070570,HLS_SYN_TPT=none,HLS_SYN_MEM=217,HLS_SYN_DSP=43,HLS_SYN_FF=6374,HLS_SYN_LUT=12122,HLS_VERSION=2018_3}" *)

module top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_address0,
        img_ce0,
        img_q0,
        img_address1,
        img_ce1,
        img_we1,
        img_d1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_state15 = 11'd4;
parameter    ap_ST_fsm_state16 = 11'd8;
parameter    ap_ST_fsm_state17 = 11'd16;
parameter    ap_ST_fsm_state18 = 11'd32;
parameter    ap_ST_fsm_state19 = 11'd64;
parameter    ap_ST_fsm_state20 = 11'd128;
parameter    ap_ST_fsm_state21 = 11'd256;
parameter    ap_ST_fsm_pp1_stage0 = 11'd512;
parameter    ap_ST_fsm_state24 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] img_address0;
output   img_ce0;
input  [31:0] img_q0;
output  [9:0] img_address1;
output   img_ce1;
output   img_we1;
output  [31:0] img_d1;
output  [3:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] img_address0;
reg img_ce0;
reg img_ce1;
reg img_we1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] c_address0;
reg    c_ce0;
reg    c_we0;
reg   [31:0] c_d0;
wire   [31:0] c_q0;
reg   [6:0] h_address0;
reg    h_ce0;
reg    h_we0;
reg   [31:0] h_d0;
wire   [31:0] h_q0;
reg   [6:0] dense_output_address0;
reg    dense_output_ce0;
reg    dense_output_we0;
wire   [31:0] dense_output_q0;
reg   [3:0] softmax_output_address0;
reg    softmax_output_ce0;
reg    softmax_output_we0;
wire   [31:0] softmax_output_q0;
reg   [9:0] indvar_flatten_reg_196;
reg   [4:0] i_i_reg_207;
reg   [4:0] j_i_reg_218;
reg   [3:0] i_reg_240;
wire   [0:0] exitcond_flatten_fu_327_p2;
reg   [0:0] exitcond_flatten_reg_453;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter5_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter6_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter7_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter8_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter9_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter10_reg;
reg   [0:0] exitcond_flatten_reg_453_pp0_iter11_reg;
wire   [9:0] indvar_flatten_next_fu_333_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] tmp_i_mid2_v_fu_359_p3;
reg   [4:0] tmp_i_mid2_v_reg_462;
reg   [9:0] img_addr_reg_467;
reg   [9:0] img_addr_reg_467_pp0_iter1_reg;
reg   [9:0] img_addr_reg_467_pp0_iter2_reg;
reg   [9:0] img_addr_reg_467_pp0_iter3_reg;
reg   [9:0] img_addr_reg_467_pp0_iter4_reg;
reg   [9:0] img_addr_reg_467_pp0_iter5_reg;
reg   [9:0] img_addr_reg_467_pp0_iter6_reg;
reg   [9:0] img_addr_reg_467_pp0_iter7_reg;
reg   [9:0] img_addr_reg_467_pp0_iter8_reg;
reg   [9:0] img_addr_reg_467_pp0_iter9_reg;
reg   [9:0] img_addr_reg_467_pp0_iter10_reg;
reg   [9:0] img_addr_reg_467_pp0_iter11_reg;
wire   [4:0] j_fu_412_p2;
wire   [63:0] tmp_105_i_fu_313_p1;
reg   [63:0] tmp_105_i_reg_478;
wire   [63:0] grp_fu_322_p2;
reg   [63:0] tmp_106_i_reg_483;
wire   [63:0] grp_fu_317_p2;
reg   [63:0] tmp_107_i_reg_488;
wire   [7:0] i_3_fu_424_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond_fu_436_p2;
reg   [0:0] exitcond_reg_501;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state22_pp1_stage0_iter0;
wire    ap_block_state23_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [3:0] i_1_fu_442_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_fu_448_p1;
reg   [63:0] tmp_reg_510;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
wire    ap_CS_fsm_state21;
wire    grp_softmax_forward_fu_297_ap_ready;
wire    grp_softmax_forward_fu_297_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state22;
reg    ap_enable_reg_pp1_iter1;
wire   [9:0] grp_dataflow_parent_loop_1_fu_251_img_address0;
wire    grp_dataflow_parent_loop_1_fu_251_img_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_251_img_d0;
wire    grp_dataflow_parent_loop_1_fu_251_img_we0;
wire   [9:0] grp_dataflow_parent_loop_1_fu_251_img_address1;
wire    grp_dataflow_parent_loop_1_fu_251_img_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_251_img_d1;
wire    grp_dataflow_parent_loop_1_fu_251_img_we1;
wire   [6:0] grp_dataflow_parent_loop_1_fu_251_h_address0;
wire    grp_dataflow_parent_loop_1_fu_251_h_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_251_h_d0;
wire    grp_dataflow_parent_loop_1_fu_251_h_we0;
wire   [6:0] grp_dataflow_parent_loop_1_fu_251_h_address1;
wire    grp_dataflow_parent_loop_1_fu_251_h_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_251_h_d1;
wire    grp_dataflow_parent_loop_1_fu_251_h_we1;
wire   [6:0] grp_dataflow_parent_loop_1_fu_251_c_address0;
wire    grp_dataflow_parent_loop_1_fu_251_c_ce0;
wire   [31:0] grp_dataflow_parent_loop_1_fu_251_c_d0;
wire    grp_dataflow_parent_loop_1_fu_251_c_we0;
wire   [6:0] grp_dataflow_parent_loop_1_fu_251_c_address1;
wire    grp_dataflow_parent_loop_1_fu_251_c_ce1;
wire   [31:0] grp_dataflow_parent_loop_1_fu_251_c_d1;
wire    grp_dataflow_parent_loop_1_fu_251_c_we1;
wire    grp_dataflow_parent_loop_1_fu_251_ap_start;
wire    grp_dataflow_parent_loop_1_fu_251_ap_done;
wire    grp_dataflow_parent_loop_1_fu_251_ap_ready;
wire    grp_dataflow_parent_loop_1_fu_251_ap_idle;
reg    grp_dataflow_parent_loop_1_fu_251_ap_continue;
wire    grp_dense_forward_fu_285_ap_start;
wire    grp_dense_forward_fu_285_ap_done;
wire    grp_dense_forward_fu_285_ap_idle;
wire    grp_dense_forward_fu_285_ap_ready;
wire   [6:0] grp_dense_forward_fu_285_h_address0;
wire    grp_dense_forward_fu_285_h_ce0;
wire   [6:0] grp_dense_forward_fu_285_dense_output_address0;
wire    grp_dense_forward_fu_285_dense_output_ce0;
wire    grp_dense_forward_fu_285_dense_output_we0;
wire   [31:0] grp_dense_forward_fu_285_dense_output_d0;
wire    grp_softmax_forward_fu_297_ap_start;
wire    grp_softmax_forward_fu_297_ap_idle;
wire   [6:0] grp_softmax_forward_fu_297_dense_output_address0;
wire    grp_softmax_forward_fu_297_dense_output_ce0;
wire   [3:0] grp_softmax_forward_fu_297_softmax_output_address0;
wire    grp_softmax_forward_fu_297_softmax_output_ce0;
wire    grp_softmax_forward_fu_297_softmax_output_we0;
wire   [31:0] grp_softmax_forward_fu_297_softmax_output_d0;
reg   [4:0] ap_phi_mux_i_i_phi_fu_211_p4;
wire    ap_block_pp0_stage0;
reg   [7:0] i_0_i_i_i_reg_229;
wire   [0:0] exitcond1_i_i_i_fu_418_p2;
wire    ap_CS_fsm_state15;
reg    grp_dataflow_parent_loop_1_fu_251_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_done;
reg    ap_block_state17_on_subcall_done;
reg    ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_done;
reg    grp_dense_forward_fu_285_ap_start_reg;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg    grp_softmax_forward_fu_297_ap_start_reg;
wire    ap_CS_fsm_state20;
wire  signed [63:0] tmp_5_cast_fu_407_p1;
wire   [63:0] tmp_i_i_fu_430_p1;
wire    ap_block_pp1_stage0;
wire   [31:0] tmp_108_i_fu_309_p1;
wire   [0:0] exitcond_i3_fu_345_p2;
wire   [4:0] i_2_fu_339_p2;
wire   [9:0] tmp_2_fu_367_p3;
wire   [6:0] tmp_3_fu_379_p3;
wire   [10:0] p_shl_cast_fu_375_p1;
wire   [10:0] p_shl1_cast_fu_387_p1;
wire   [4:0] j_i_mid2_fu_351_p3;
wire   [10:0] tmp_4_fu_391_p2;
wire   [10:0] tmp_i_cast_fu_397_p1;
wire   [10:0] tmp_5_fu_401_p2;
wire    ap_CS_fsm_state24;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_dataflow_parent_loop_1_fu_251_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_done = 1'b0;
#0 grp_dense_forward_fu_285_ap_start_reg = 1'b0;
#0 grp_softmax_forward_fu_297_ap_start_reg = 1'b0;
end

top_c #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_address0),
    .ce0(c_ce0),
    .we0(c_we0),
    .d0(c_d0),
    .q0(c_q0)
);

top_c #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_address0),
    .ce0(h_ce0),
    .we0(h_we0),
    .d0(h_d0),
    .q0(h_q0)
);

top_c #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
dense_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_output_address0),
    .ce0(dense_output_ce0),
    .we0(dense_output_we0),
    .d0(grp_dense_forward_fu_285_dense_output_d0),
    .q0(dense_output_q0)
);

top_softmax_output #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
softmax_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(softmax_output_address0),
    .ce0(softmax_output_ce0),
    .we0(softmax_output_we0),
    .d0(grp_softmax_forward_fu_297_softmax_output_d0),
    .q0(softmax_output_q0)
);

dataflow_parent_loop_1 grp_dataflow_parent_loop_1_fu_251(
    .img_address0(grp_dataflow_parent_loop_1_fu_251_img_address0),
    .img_ce0(grp_dataflow_parent_loop_1_fu_251_img_ce0),
    .img_d0(grp_dataflow_parent_loop_1_fu_251_img_d0),
    .img_q0(img_q0),
    .img_we0(grp_dataflow_parent_loop_1_fu_251_img_we0),
    .img_address1(grp_dataflow_parent_loop_1_fu_251_img_address1),
    .img_ce1(grp_dataflow_parent_loop_1_fu_251_img_ce1),
    .img_d1(grp_dataflow_parent_loop_1_fu_251_img_d1),
    .img_q1(32'd0),
    .img_we1(grp_dataflow_parent_loop_1_fu_251_img_we1),
    .h_address0(grp_dataflow_parent_loop_1_fu_251_h_address0),
    .h_ce0(grp_dataflow_parent_loop_1_fu_251_h_ce0),
    .h_d0(grp_dataflow_parent_loop_1_fu_251_h_d0),
    .h_q0(h_q0),
    .h_we0(grp_dataflow_parent_loop_1_fu_251_h_we0),
    .h_address1(grp_dataflow_parent_loop_1_fu_251_h_address1),
    .h_ce1(grp_dataflow_parent_loop_1_fu_251_h_ce1),
    .h_d1(grp_dataflow_parent_loop_1_fu_251_h_d1),
    .h_q1(32'd0),
    .h_we1(grp_dataflow_parent_loop_1_fu_251_h_we1),
    .c_address0(grp_dataflow_parent_loop_1_fu_251_c_address0),
    .c_ce0(grp_dataflow_parent_loop_1_fu_251_c_ce0),
    .c_d0(grp_dataflow_parent_loop_1_fu_251_c_d0),
    .c_q0(c_q0),
    .c_we0(grp_dataflow_parent_loop_1_fu_251_c_we0),
    .c_address1(grp_dataflow_parent_loop_1_fu_251_c_address1),
    .c_ce1(grp_dataflow_parent_loop_1_fu_251_c_ce1),
    .c_d1(grp_dataflow_parent_loop_1_fu_251_c_d1),
    .c_q1(32'd0),
    .c_we1(grp_dataflow_parent_loop_1_fu_251_c_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dataflow_parent_loop_1_fu_251_ap_start),
    .ap_done(grp_dataflow_parent_loop_1_fu_251_ap_done),
    .ap_ready(grp_dataflow_parent_loop_1_fu_251_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_1_fu_251_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_1_fu_251_ap_continue)
);

dense_forward grp_dense_forward_fu_285(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_forward_fu_285_ap_start),
    .ap_done(grp_dense_forward_fu_285_ap_done),
    .ap_idle(grp_dense_forward_fu_285_ap_idle),
    .ap_ready(grp_dense_forward_fu_285_ap_ready),
    .h_address0(grp_dense_forward_fu_285_h_address0),
    .h_ce0(grp_dense_forward_fu_285_h_ce0),
    .h_q0(h_q0),
    .dense_output_address0(grp_dense_forward_fu_285_dense_output_address0),
    .dense_output_ce0(grp_dense_forward_fu_285_dense_output_ce0),
    .dense_output_we0(grp_dense_forward_fu_285_dense_output_we0),
    .dense_output_d0(grp_dense_forward_fu_285_dense_output_d0),
    .dense_output_q0(dense_output_q0)
);

softmax_forward grp_softmax_forward_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_forward_fu_297_ap_start),
    .ap_done(grp_softmax_forward_fu_297_ap_done),
    .ap_idle(grp_softmax_forward_fu_297_ap_idle),
    .ap_ready(grp_softmax_forward_fu_297_ap_ready),
    .dense_output_address0(grp_softmax_forward_fu_297_dense_output_address0),
    .dense_output_ce0(grp_softmax_forward_fu_297_dense_output_ce0),
    .dense_output_q0(dense_output_q0),
    .softmax_output_address0(grp_softmax_forward_fu_297_softmax_output_address0),
    .softmax_output_ce0(grp_softmax_forward_fu_297_softmax_output_ce0),
    .softmax_output_we0(grp_softmax_forward_fu_297_softmax_output_we0),
    .softmax_output_d0(grp_softmax_forward_fu_297_softmax_output_d0),
    .softmax_output_q0(softmax_output_q0)
);

top_fptrunc_64ns_CeG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
top_fptrunc_64ns_CeG_U53(
    .din0(tmp_107_i_reg_488),
    .dout(tmp_108_i_fu_309_p1)
);

top_fpext_32ns_64DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
top_fpext_32ns_64DeQ_U54(
    .din0(img_q0),
    .dout(tmp_105_i_fu_313_p1)
);

top_dadd_64ns_64nFfa #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
top_dadd_64ns_64nFfa_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_106_i_reg_483),
    .din1(64'd13830554455654793216),
    .ce(1'b1),
    .dout(grp_fu_317_p2)
);

top_dmul_64ns_64nGfk #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
top_dmul_64ns_64nGfk_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_105_i_reg_478),
    .din1(64'd4575657221408423936),
    .ce(1'b1),
    .dout(grp_fu_322_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_softmax_forward_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state22))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state22);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((grp_softmax_forward_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_1_fu_251_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_1_fu_251_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dataflow_parent_loop_1_fu_251_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state17)) | ((exitcond1_i_i_i_fu_418_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)))) begin
            grp_dataflow_parent_loop_1_fu_251_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_1_fu_251_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_1_fu_251_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_forward_fu_285_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_dense_forward_fu_285_ap_start_reg <= 1'b1;
        end else if ((grp_dense_forward_fu_285_ap_ready == 1'b1)) begin
            grp_dense_forward_fu_285_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_forward_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_softmax_forward_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_forward_fu_297_ap_ready == 1'b1)) begin
            grp_softmax_forward_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_0_i_i_i_reg_229 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        i_0_i_i_i_reg_229 <= i_3_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_453 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_i_reg_207 <= tmp_i_mid2_v_reg_462;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_i_reg_207 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_fu_436_p2 == 1'd0))) begin
        i_reg_240 <= i_1_fu_442_p2;
    end else if (((grp_softmax_forward_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        i_reg_240 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_196 <= indvar_flatten_next_fu_333_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_196 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_i_reg_218 <= j_fu_412_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_i_reg_218 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_453 <= exitcond_flatten_fu_327_p2;
        exitcond_flatten_reg_453_pp0_iter1_reg <= exitcond_flatten_reg_453;
        img_addr_reg_467_pp0_iter1_reg <= img_addr_reg_467;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_453_pp0_iter10_reg <= exitcond_flatten_reg_453_pp0_iter9_reg;
        exitcond_flatten_reg_453_pp0_iter11_reg <= exitcond_flatten_reg_453_pp0_iter10_reg;
        exitcond_flatten_reg_453_pp0_iter2_reg <= exitcond_flatten_reg_453_pp0_iter1_reg;
        exitcond_flatten_reg_453_pp0_iter3_reg <= exitcond_flatten_reg_453_pp0_iter2_reg;
        exitcond_flatten_reg_453_pp0_iter4_reg <= exitcond_flatten_reg_453_pp0_iter3_reg;
        exitcond_flatten_reg_453_pp0_iter5_reg <= exitcond_flatten_reg_453_pp0_iter4_reg;
        exitcond_flatten_reg_453_pp0_iter6_reg <= exitcond_flatten_reg_453_pp0_iter5_reg;
        exitcond_flatten_reg_453_pp0_iter7_reg <= exitcond_flatten_reg_453_pp0_iter6_reg;
        exitcond_flatten_reg_453_pp0_iter8_reg <= exitcond_flatten_reg_453_pp0_iter7_reg;
        exitcond_flatten_reg_453_pp0_iter9_reg <= exitcond_flatten_reg_453_pp0_iter8_reg;
        img_addr_reg_467_pp0_iter10_reg <= img_addr_reg_467_pp0_iter9_reg;
        img_addr_reg_467_pp0_iter11_reg <= img_addr_reg_467_pp0_iter10_reg;
        img_addr_reg_467_pp0_iter2_reg <= img_addr_reg_467_pp0_iter1_reg;
        img_addr_reg_467_pp0_iter3_reg <= img_addr_reg_467_pp0_iter2_reg;
        img_addr_reg_467_pp0_iter4_reg <= img_addr_reg_467_pp0_iter3_reg;
        img_addr_reg_467_pp0_iter5_reg <= img_addr_reg_467_pp0_iter4_reg;
        img_addr_reg_467_pp0_iter6_reg <= img_addr_reg_467_pp0_iter5_reg;
        img_addr_reg_467_pp0_iter7_reg <= img_addr_reg_467_pp0_iter6_reg;
        img_addr_reg_467_pp0_iter8_reg <= img_addr_reg_467_pp0_iter7_reg;
        img_addr_reg_467_pp0_iter9_reg <= img_addr_reg_467_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_reg_501 <= exitcond_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_addr_reg_467 <= tmp_5_cast_fu_407_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_453 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_105_i_reg_478 <= tmp_105_i_fu_313_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_453_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_106_i_reg_483 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_453_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_107_i_reg_488 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_mid2_v_reg_462 <= tmp_i_mid2_v_fu_359_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_fu_436_p2 == 1'd0))) begin
        tmp_reg_510[3 : 0] <= tmp_fu_448_p1[3 : 0];
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_327_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_436_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_453 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_i_phi_fu_211_p4 = tmp_i_mid2_v_reg_462;
    end else begin
        ap_phi_mux_i_i_phi_fu_211_p4 = i_i_reg_207;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        c_address0 = tmp_i_i_fu_430_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_address0 = grp_dataflow_parent_loop_1_fu_251_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        c_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_ce0 = grp_dataflow_parent_loop_1_fu_251_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        c_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_d0 = grp_dataflow_parent_loop_1_fu_251_c_d0;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        c_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_we0 = grp_dataflow_parent_loop_1_fu_251_c_we0;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dense_output_address0 = grp_softmax_forward_fu_297_dense_output_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_output_address0 = grp_dense_forward_fu_285_dense_output_address0;
    end else begin
        dense_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dense_output_ce0 = grp_softmax_forward_fu_297_dense_output_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_output_ce0 = grp_dense_forward_fu_285_dense_output_ce0;
    end else begin
        dense_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_output_we0 = grp_dense_forward_fu_285_dense_output_we0;
    end else begin
        dense_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
        grp_dataflow_parent_loop_1_fu_251_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_1_fu_251_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        h_address0 = tmp_i_i_fu_430_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_address0 = grp_dense_forward_fu_285_h_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_address0 = grp_dataflow_parent_loop_1_fu_251_h_address0;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_ce0 = grp_dense_forward_fu_285_h_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_ce0 = grp_dataflow_parent_loop_1_fu_251_h_ce0;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        h_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_d0 = grp_dataflow_parent_loop_1_fu_251_h_d0;
    end else begin
        h_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
        h_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        h_we0 = grp_dataflow_parent_loop_1_fu_251_h_we0;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        img_address0 = tmp_5_cast_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        img_address0 = grp_dataflow_parent_loop_1_fu_251_img_address0;
    end else begin
        img_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        img_ce0 = grp_dataflow_parent_loop_1_fu_251_img_ce0;
    end else begin
        img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_ce1 = 1'b1;
    end else begin
        img_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (exitcond_flatten_reg_453_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_we1 = 1'b1;
    end else begin
        img_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_501 == 1'd0))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        softmax_output_address0 = tmp_fu_448_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        softmax_output_address0 = grp_softmax_forward_fu_297_softmax_output_address0;
    end else begin
        softmax_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        softmax_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        softmax_output_ce0 = grp_softmax_forward_fu_297_softmax_output_ce0;
    end else begin
        softmax_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        softmax_output_we0 = grp_softmax_forward_fu_297_softmax_output_we0;
    end else begin
        softmax_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((exitcond_flatten_fu_327_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond1_i_i_i_fu_418_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_dense_forward_fu_285_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_softmax_forward_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_436_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_436_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd10];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_ready & ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_done) == 1'b0);
end

assign ap_block_state22_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_done = (grp_dataflow_parent_loop_1_fu_251_ap_done | ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_done);

assign ap_sync_grp_dataflow_parent_loop_1_fu_251_ap_ready = (grp_dataflow_parent_loop_1_fu_251_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_1_fu_251_ap_ready);

assign exitcond1_i_i_i_fu_418_p2 = ((i_0_i_i_i_reg_229 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_327_p2 = ((indvar_flatten_reg_196 == 10'd784) ? 1'b1 : 1'b0);

assign exitcond_fu_436_p2 = ((i_reg_240 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_345_p2 = ((j_i_reg_218 == 5'd28) ? 1'b1 : 1'b0);

assign grp_dataflow_parent_loop_1_fu_251_ap_start = grp_dataflow_parent_loop_1_fu_251_ap_start_reg;

assign grp_dense_forward_fu_285_ap_start = grp_dense_forward_fu_285_ap_start_reg;

assign grp_softmax_forward_fu_297_ap_start = grp_softmax_forward_fu_297_ap_start_reg;

assign i_1_fu_442_p2 = (i_reg_240 + 4'd1);

assign i_2_fu_339_p2 = (ap_phi_mux_i_i_phi_fu_211_p4 + 5'd1);

assign i_3_fu_424_p2 = (i_0_i_i_i_reg_229 + 8'd1);

assign img_address1 = img_addr_reg_467_pp0_iter11_reg;

assign img_d1 = tmp_108_i_fu_309_p1;

assign indvar_flatten_next_fu_333_p2 = (indvar_flatten_reg_196 + 10'd1);

assign j_fu_412_p2 = (j_i_mid2_fu_351_p3 + 5'd1);

assign j_i_mid2_fu_351_p3 = ((exitcond_i3_fu_345_p2[0:0] === 1'b1) ? 5'd0 : j_i_reg_218);

assign output_r_address0 = tmp_reg_510;

assign output_r_d0 = softmax_output_q0;

assign p_shl1_cast_fu_387_p1 = tmp_3_fu_379_p3;

assign p_shl_cast_fu_375_p1 = tmp_2_fu_367_p3;

assign tmp_2_fu_367_p3 = {{tmp_i_mid2_v_fu_359_p3}, {5'd0}};

assign tmp_3_fu_379_p3 = {{tmp_i_mid2_v_fu_359_p3}, {2'd0}};

assign tmp_4_fu_391_p2 = (p_shl_cast_fu_375_p1 - p_shl1_cast_fu_387_p1);

assign tmp_5_cast_fu_407_p1 = $signed(tmp_5_fu_401_p2);

assign tmp_5_fu_401_p2 = (tmp_4_fu_391_p2 + tmp_i_cast_fu_397_p1);

assign tmp_fu_448_p1 = i_reg_240;

assign tmp_i_cast_fu_397_p1 = j_i_mid2_fu_351_p3;

assign tmp_i_i_fu_430_p1 = i_0_i_i_i_reg_229;

assign tmp_i_mid2_v_fu_359_p3 = ((exitcond_i3_fu_345_p2[0:0] === 1'b1) ? i_2_fu_339_p2 : ap_phi_mux_i_i_phi_fu_211_p4);

always @ (posedge ap_clk) begin
    tmp_reg_510[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //top
